<Activity mc:Ignorable="sap sap2010" x:Class="FTC_Bundle" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="857.3333333333334,1568" sap2010:WorkflowViewState.IdRef="FTC_Bundle_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/cv" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:uc="clr-namespace:UiPath.CV;assembly=UiPath.CV" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FTC_Bundle" sap:VirtualizedContainerService.HintSize="608,1503.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="http://ftcadvisorpreprod.investcloud.com/" Name="str_browserURL" />
      <Variable x:TypeArguments="x:String" Default="advisor_officer@ftc.com" Name="str_userName" />
      <Variable x:TypeArguments="x:String" Name="str_password">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">BBProd.2024!</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="str_today" />
      <Variable x:TypeArguments="x:String" Name="str_folderDate" />
      <Variable x:TypeArguments="sd2:DataTable" Name="dt_FTCReport" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_FTCReport]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="546,54" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Downloads\FTC_Advisor_Report_Mapping 1.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <Assign sap:VirtualizedContainerService.HintSize="546,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_today]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.now.ToString("MMddyyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="546,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_folderDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[DateTime.now.ToString("ddMMyyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Directory.Exists(&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_folderDate+&quot;\FTC&quot;)]" DisplayName="If the &quot;FTC_Report&quot;" sap:VirtualizedContainerService.HintSize="546,54" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,169.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,82" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_folderDate+&quot;\IndividualReport&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CreateDirectory>
        </Sequence>
      </If.Else>
    </If>
    <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="546,954" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[str_browserURL]">
      <ui:OpenBrowser.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="512,826.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="FTC_LOGIN - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into the 'USERNAME'" EmptyField="True" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="TypeInto_1" SimulateType="True" Text="[str_userName]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="122f3201-fdb5-4b68-9b92-afc99df000fa" InformativeScreenshot="4d5b8c950b4eb914c869637fb5ea9ad1" Selector="&lt;webctrl tag='LABEL' aaname='Username' /&gt;&lt;nav up='1' /&gt;&lt;webctrl tag='INPUT' type='text' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TypeInto>
              <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into the 'PASSWORD'" EmptyField="True" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="TypeInto_2" SimulateType="True" Text="[str_password]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="122f3201-fdb5-4b68-9b92-afc99df000fa" InformativeScreenshot="215da61d727602e2064edd7a1bffd01c" Selector="&lt;webctrl tag='INPUT' type='password' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TypeInto>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'Remember' check box" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fe43f21b-2896-48a5-af7f-0a7ffaee0227" InformativeScreenshot="5545852b8b35167df5f8002aca8bff0f" Selector="&lt;webctrl class='dx-checkbox-icon' tag='SPAN' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'LOGIN' button" sap:VirtualizedContainerService.HintSize="388,54" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fe43f21b-2896-48a5-af7f-0a7ffaee0227" InformativeScreenshot="8c1cf4a58c574f4c164e381fe9b2e96f" Selector="&lt;webctrl class='dx-button-content' tag='DIV' innertext='LOGIN' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
            </Sequence>
            <Sequence DisplayName="FTC_REPORT_GENERATION - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Default="New Standard Pack" Name="str_reportName" />
                <Variable x:TypeArguments="x:String" Default="[&quot;BIRT - &quot; + str_reportName+&quot; - &quot;+ str_today]" Name="str_runName" />
                <Variable x:TypeArguments="x:String" Default="04/01/2019" Name="str_asofDate" />
                <Variable x:TypeArguments="x:String" Default="93540700" Name="str_accountNumber" />
                <Variable x:TypeArguments="x:String" Name="str_downloadFilePath" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:Hover DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateHover="{x:Null}" DisplayName="Hover the 'Report' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Hover_1">
                <ui:Hover.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Hover.CursorPosition>
                <ui:Hover.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="17689510-edb4-4bb2-b763-87ead3772c33" InformativeScreenshot="196ec72601acfc2fea34bc2a1b0430d7" Selector="&lt;webctrl aaname='Reports' aria-role='link' tag='SPAN' class='dx-menu-item-text ' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Hover.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Hover>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'Manage Run And Packs' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="287bf49e-f840-456f-bf87-741166241329" InformativeScreenshot="9e09cae091fdc801cb619555d6fbed33" Selector="&lt;webctrl aria-role='menuitem' tag='DIV' class='dx-item-content dx-menu-item-content' innertext='Manage And Run Packs' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click the 'Account' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1f4c94d7-ef0e-4fc3-a473-6b84d5cf4e6d" InformativeScreenshot="a13678d3699489ede255a6dcfed348d4" Selector="&lt;webctrl tag='TD' aaname='Accounts' innertext='Accounts' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="3000" DelayMS="3000" DisplayName="Type Into 'Report Name'" EmptyField="True" sap:VirtualizedContainerService.HintSize="434,157.33333333333334" sap2010:WorkflowViewState.IdRef="TypeInto_3" Text="[str_reportName]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="09bbbc41-62eb-46fe-8654-d5c31c76f3f1" InformativeScreenshot="a00ca10a8c6056e41273a4a29766c3a7" Selector="&lt;webctrl tableCol='1' tableRow='7' tag='TABLE' class='dxeTextBoxSys dxeTextBox' idx='2' /&gt;&lt;webctrl tableRow='1' tag='INPUT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TypeInto>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click the 'Run Pack' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1f4c94d7-ef0e-4fc3-a473-6b84d5cf4e6d" InformativeScreenshot="a13678d3699489ede255a6dcfed348d4" Selector="&lt;webctrl class='dxgvTable' tableRow='1' tag='TABLE' idx='3' /&gt;&lt;webctrl tag='IMG' aaname='Run Pack' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into the 'Run Name '" EmptyField="True" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="TypeInto_4" SimulateType="True" Text="[str_runName]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0c5b5b6e-28ee-47e4-9eb5-45d65e5eb0a1" InformativeScreenshot="b6168e605bf6a521d4e00dabec54bbe8" Selector="&lt;webctrl css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table' tableCol='1' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tableRow='1' tag='INPUT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TypeInto>
              <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DisplayName="Type Into the 'As of Date '" EmptyField="True" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="TypeInto_5" SimulateType="True" Text="[str_asofDate]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0c5b5b6e-28ee-47e4-9eb5-45d65e5eb0a1" InformativeScreenshot="2268e6284862eeae63addd9867301a20" Selector="&lt;webctrl class='dxeButtonEdit' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tableRow='1' tag='INPUT' class='dxeEditArea dxeEditAreaSys' type='text' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TypeInto>
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="pgdn" KeyModifiers="None" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d0d58924-5069-4ee7-b042-3282ee12caed">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendHotkey>
              <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" ScopeId="{x:Null}" ApiKey="Pg8i1BE9eD1IdNbef1J8dDhlTBQ93SvEbN7LGvOt29rzNtwkQB+MXgpcGGyxjzOl" CvMethod="ElementDetection, OCR" DesignTimeCacheId="b6de8857-06b8-44bb-ab5a-896ed2f4aa93" DisplayName="CV Screen Scope 'DIV '" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="CVScope_1" SendOnPremData="False" Server="https://cv.uipath.com" Version="V6">
                <p:CVScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" DelayScreenshotAfterScroll="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Icon (488,374,19,16)&quot;]" DesignTimeCacheId="b6de8857-06b8-44bb-ab5a-896ed2f4aa93" DesignTimeScaleFactor="1.5" DisplayName="CV Click - Icon" sap:VirtualizedContainerService.HintSize="400,54" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_1" InformativeScreenshot="4801d547de6d4081c889a0ae1e6be2d4" KeyModifiers="None" MouseButton="BTN_LEFT" NumberOfScrolls="2" ScrollDirection="None" Version="V6">
                        <p:CvClickWithDescriptor.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </p:CvClickWithDescriptor.CursorPosition>
                        <p:CvClickWithDescriptor.DesignTimeDescriptor>
                          <uc:CvDescriptor Id="d8c1e856-ce32-47b8-afa4-a421a073c4e0">
                            <uc:CvDescriptor.Target>
                              <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="488, 374, 19, 16" ElementType="Icon" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAABwAAAAYCAYAAADpnJ2CAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAANGSURBVEhLvZLpT1NBFMXnDzSKyiaytaWlLLLTolAwJKhICCKyCilLKRTKYmNANCABBAGlGCMBAVFAESiYsrh8Ot6Z11dLeSAJST/8cmfuPffcefOGJRb0IJAwvakbgYTF59kRSJgutxOBhMXdtOF/6G51CLQelDRnhWmM7TiNuJx2aHNs0JJYd0uKPCej1CPjq5NhGkMb/kecsY2GtiOeBuooamnPc7zG90kmO4x3HbhZ/BTZRU+Ezr9f1jNVViuUUGdbBRqDhDRUGsDX6myuaUVaYTdKHw9h/M0K3s19xYuReeTcc/j4tHr7uR+LzWzBcSwCVdZR5CFqWsvapLwOFJb3Y3hiEZ++uPB5bQdd/bMiJ2vkXh5ZTEYzzoMqqwXJJhvqrGMYm1rC+rcfNHgbXX1OpN7uhCbbInSxmZKeRaU14jxEpzcJs4TcNhQ+6IO1d1p86fzSdzE0vdDu0Ul6Fplihj+xGU0oqx+EuWMctZZRQY1lRBGpNooK87BYdz6dwerXXbh2DjD3cQNm2zgMd3q83uz6jQb4o6YTj04uiuv5uLyJBTotP7Ec5bUM38+8X8Wr6WXRt7HpxuHhH7jdPzHl/IzyhiGvN7uW9Bj+qDIaMelcgXvvF1y7B9ja3sMmseUieJTXxLZrn/b7WF3fwfziBr3UdZE/OPyNPeqf/bCGysaXXm8WnlgHfyJT6ulUg7D2TMLS9Rot9gk0EzyehNk2JjS9z5xYoyvd+XGAxU+bImcosnu9WZi+BsdIqP2HUt2PcNLFpDbASMYNbaPilS6tbMExMIsbJusRPxYSX43zEpFUi7zibvT2z9B/36Xrd8PxfBZ6Y7OohZImTF8tIgvWVsKfECJUV0UCgscT4Lqo5Dqk5VvR3feWHtCG+KeOASfy7/eIuuwVRl4hukqwq3GP4E8wEUpFLpLNwwSUI3iNw3WqtHqYirswMrEgBk7OLCO9wCpqHGmg1Mf37Ir6IRTRVNDwCmrgTVIzzx2BdMFUi0isgd7QiOTcFiTkNCFcX0X1h7hKGl737WdBsQ9wEpdV5WQqwddKmhNRefo1HsgjiPbsUkwZTiPIg1LtrPh6sItRpTiVaA9KtbPi088uRJYgcJTgL/Krw+IpGMoDAAAAAElFTkSuQmCC" />
                            </uc:CvDescriptor.Target>
                          </uc:CvDescriptor>
                        </p:CvClickWithDescriptor.DesignTimeDescriptor>
                        <p:CvClickWithDescriptor.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="2c692def-7e42-48a1-a9eb-9a37fa85e1d7">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </p:CvClickWithDescriptor.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </p:CvClickWithDescriptor>
                    </Sequence>
                  </ActivityAction>
                </p:CVScope.Body>
                <p:CVScope.DesignTimeCache>
                  <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" DataSent="False" />
                </p:CVScope.DesignTimeCache>
                <p:CVScope.DesignTimeCacheContainer>
                  <uc:CvCacheContainer>
                    <uc:CvCacheContainer.Caches>
                      <scg:List x:TypeArguments="uc:CVCache" Capacity="1">
                        <uc:CVCache DataSent="False" DisplayName="Screen CV Click - Icon (Main)" Id="b6de8857-06b8-44bb-ab5a-896ed2f4aa93" InformativeScreenshot="40279e05ca9c2df5e0c19764dc719199" LogicalPosition="226, 122" OcrText="Report Pack Name: New Standard Pack Run Name: Birt As of Date: 01/04/2019 Page Numbering: Bundles Only Cancel Next" Position="226, 122" ScaleFactor="1.5" ScreenshotGuid="2eab8fce-8b78-4368-840d-b79a7eecd9ef" ServerVersion="1">
                          <uc:CVCache.CvAnchorRelations>
                            <scg:List x:TypeArguments="uc:AnchorRelationInfo" Capacity="4">
                              <uc:AnchorRelationInfo IsTargetText="True" Target="4">
                                <uc:AnchorRelationInfo.Anchors>
                                  <x:Array Type="x:Int32">
                                    <x:Int32>2</x:Int32>
                                  </x:Array>
                                </uc:AnchorRelationInfo.Anchors>
                              </uc:AnchorRelationInfo>
                              <uc:AnchorRelationInfo IsTargetText="False" Target="10">
                                <uc:AnchorRelationInfo.Anchors>
                                  <x:Array Type="x:Int32">
                                    <x:Int32>13</x:Int32>
                                    <x:Int32>14</x:Int32>
                                  </x:Array>
                                </uc:AnchorRelationInfo.Anchors>
                              </uc:AnchorRelationInfo>
                              <uc:AnchorRelationInfo IsTargetText="False" Target="9">
                                <uc:AnchorRelationInfo.Anchors>
                                  <x:Array Type="x:Int32">
                                    <x:Int32>9</x:Int32>
                                    <x:Int32>10</x:Int32>
                                    <x:Int32>11</x:Int32>
                                  </x:Array>
                                </uc:AnchorRelationInfo.Anchors>
                              </uc:AnchorRelationInfo>
                              <uc:AnchorRelationInfo IsTargetText="False" Target="0">
                                <uc:AnchorRelationInfo.Anchors>
                                  <x:Array Type="x:Int32">
                                    <x:Int32>6</x:Int32>
                                    <x:Int32>7</x:Int32>
                                  </x:Array>
                                </uc:AnchorRelationInfo.Anchors>
                              </uc:AnchorRelationInfo>
                            </scg:List>
                          </uc:CVCache.CvAnchorRelations>
                          <uc:CVCache.CvUiElements>
                            <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="16">
                              <uc:CvElementInfo Category="InputBox" Region="337, 177, 337, 38" />
                              <uc:CvElementInfo Category="Button" Region="342, 365, 74, 34" />
                              <uc:CvElementInfo Category="Button" Region="445, 365, 70, 34" />
                              <uc:CvElementInfo Category="Icon" Region="488, 374, 19, 16" />
                              <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="488, 374, 18, 16" />
                              <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="458, 249, 15, 16" />
                              <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="358, 374, 17, 15" />
                              <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="510, 392, 9, 10" />
                              <uc:CvElementInfo Category="Cell" Confidence="Runtime" Region="350, 362, 110, 36" />
                              <uc:CvElementInfo Category="InputBox" Region="337, 240, 146, 36" />
                              <uc:CvElementInfo Category="InputBox" Region="338, 300, 146, 37" />
                              <uc:CvElementInfo Category="ArrowButton" Region="457, 308, 18, 21" />
                              <uc:CvElementInfo Category="ArrowButton" Region="457, 246, 18, 22" />
                            </scg:List>
                          </uc:CVCache.CvUiElements>
                          <uc:CVCache.OcrTexts>
                            <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="19">
                              <uc:OcrTextInfo Region="338, 116, 44, 14" Text="Report" />
                              <uc:OcrTextInfo Region="386, 116, 30, 12" Text="Pack" />
                              <uc:OcrTextInfo Region="418, 116, 42, 12" Text="Name:" />
                              <uc:OcrTextInfo Region="472, 116, 26, 12" Text="New" />
                              <uc:OcrTextInfo Region="500, 116, 50, 12" Text="Standard" />
                              <uc:OcrTextInfo Region="552, 116, 28, 12" Text="Pack" />
                              <uc:OcrTextInfo Region="338, 162, 26, 12" Text="Run" />
                              <uc:OcrTextInfo Region="368, 162, 42, 12" Text="Name:" />
                              <uc:OcrTextInfo Region="346, 190, 22, 12" Text="Birt" />
                              <uc:OcrTextInfo Region="338, 224, 18, 12" Text="As" />
                              <uc:OcrTextInfo Region="358, 224, 14, 12" Text="of" />
                              <uc:OcrTextInfo Region="374, 224, 34, 12" Text="Date:" />
                              <uc:OcrTextInfo Region="346, 252, 72, 12" Text="01/04/2019" />
                              <uc:OcrTextInfo Region="338, 284, 34, 16" Text="Page" />
                              <uc:OcrTextInfo Region="374, 284, 72, 16" Text="Numbering:" />
                              <uc:OcrTextInfo Region="346, 312, 52, 12" Text="Bundles" />
                              <uc:OcrTextInfo Region="400, 312, 32, 16" Text="Only" />
                              <uc:OcrTextInfo Region="358, 374, 44, 12" Text="Cancel" />
                              <uc:OcrTextInfo Region="456, 374, 30, 12" Text="Next" />
                            </scg:List>
                          </uc:CVCache.OcrTexts>
                        </uc:CVCache>
                      </scg:List>
                    </uc:CvCacheContainer.Caches>
                  </uc:CvCacheContainer>
                </p:CVScope.DesignTimeCacheContainer>
                <p:CVScope.OCREngine>
                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <p1:UiPathScreenOCR Endpoint="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="Pg8i1BE9eD1IdNbef1J8dDhlTBQ93SvEbN7LGvOt29rzNtwkQB+MXgpcGGyxjzOl" ComputeSkewAngle="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,25.333333333333332" sap2010:WorkflowViewState.IdRef="UiPathScreenOCR_6" Image="[Image]" Language="en" Profile="Screen" Scale="1" Timeout="100000" />
                  </ActivityFunc>
                </p:CVScope.OCREngine>
                <p:CVScope.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="390e405a-eb59-40de-ab14-1e2504b3a69e" InformativeScreenshot="deb0296cda987b2cf2490e7dc9dd269c" Selector="&lt;webctrl class='IX_ControlDiv' parentname='aspnetForm' tag='DIV' /&gt;" WaitForReady="INTERACTIVE">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                  </ui:Target>
                </p:CVScope.Target>
                <p:CVScope.UseLocalServer>
                  <InArgument x:TypeArguments="x:Boolean" />
                </p:CVScope.UseLocalServer>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:CVScope>
              <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" ClickBeforeTyping="True" DelayBefore="3000" DelayMS="3000" DisplayName="Type Into the 'Account Number '" EmptyField="True" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="TypeInto_6" SimulateType="True" Text="[str_accountNumber]">
                <ui:TypeInto.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0c5b5b6e-28ee-47e4-9eb5-45d65e5eb0a1" InformativeScreenshot="aa9078416ea5d7bfa8d897c5e8c41533" Selector="&lt;webctrl tableCol='3' tableRow='5' tag='TABLE' /&gt;&lt;webctrl tableRow='1' tag='INPUT' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:TypeInto.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:TypeInto>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click the 'Check Box '" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e8541d4c-6127-419f-a612-6f5423044097" InformativeScreenshot="b4a9e7d083fc56420147a1c2d9329a2e" Selector="&lt;webctrl class='dxgvTable' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tableRow='8' tag='SPAN' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" ScopeId="{x:Null}" ApiKey="Pg8i1BE9eD1IdNbef1J8dDhlTBQ93SvEbN7LGvOt29rzNtwkQB+MXgpcGGyxjzOl" CvMethod="ElementDetection, OCR" DesignTimeCacheId="237be70e-08a9-419f-aa20-66247f5490b7" DisplayName="Click the 'ADD TO RUN' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="CVScope_2" SendOnPremData="False" Server="https://cv.uipath.com" Version="V6">
                <p:CVScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" DelayScreenshotAfterScroll="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text 'Add to run' (12,84,64,14)&quot;]" DesignTimeCacheId="237be70e-08a9-419f-aa20-66247f5490b7" DesignTimeScaleFactor="1.5" DisplayName="CV Click - Text" sap:VirtualizedContainerService.HintSize="400,54" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_2" InformativeScreenshot="d3d05d6bfbc52c6a8a87e7125c7bc062" KeyModifiers="None" MouseButton="BTN_LEFT" NumberOfScrolls="2" ScrollDirection="None" Version="V6">
                        <p:CvClickWithDescriptor.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </p:CvClickWithDescriptor.CursorPosition>
                        <p:CvClickWithDescriptor.DesignTimeDescriptor>
                          <uc:CvDescriptor Id="d57e1063-e3d8-41fb-b2ac-446818a23678">
                            <uc:CvDescriptor.Target>
                              <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="12, 84, 64, 14" ElementType="Text" Text="Add to run" />
                            </uc:CvDescriptor.Target>
                          </uc:CvDescriptor>
                        </p:CvClickWithDescriptor.DesignTimeDescriptor>
                        <p:CvClickWithDescriptor.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="5ca73f45-4946-4bd3-ad8c-f908a3c486ee">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </p:CvClickWithDescriptor.Target>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </p:CvClickWithDescriptor>
                    </Sequence>
                  </ActivityAction>
                </p:CVScope.Body>
                <p:CVScope.DesignTimeCache>
                  <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" DataSent="False" />
                </p:CVScope.DesignTimeCache>
                <p:CVScope.DesignTimeCacheContainer>
                  <uc:CvCacheContainer>
                    <uc:CvCacheContainer.Caches>
                      <scg:List x:TypeArguments="uc:CVCache" Capacity="1">
                        <uc:CVCache DataSent="False" DisplayName="Screen CV Click - 'Add to run' (Main)" Id="237be70e-08a9-419f-aa20-66247f5490b7" InformativeScreenshot="f3d1a8b54d518c4f4c394747e4ef4bc8" LogicalPosition="283, 323" OcrText="Open Customization Export Panel to Excel Add to run" Position="283, 323" ScaleFactor="1.5" ScreenshotGuid="c0e562bb-513a-4777-ba7d-c5768b1333a2" ServerVersion="1">
                          <uc:CVCache.CvAnchorRelations>
                            <scg:List x:TypeArguments="uc:AnchorRelationInfo" Capacity="0" />
                          </uc:CVCache.CvAnchorRelations>
                          <uc:CVCache.CvUiElements>
                            <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="4">
                              <uc:CvElementInfo Category="Icon" Region="396, 4, 22, 21" />
                              <uc:CvElementInfo Category="Button" Region="2, 74, 86, 35" />
                              <uc:CvElementInfo Category="Icon" Region="312, 4, 20, 20" />
                              <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="396, 39, 16, 14" />
                            </scg:List>
                          </uc:CVCache.CvUiElements>
                          <uc:CVCache.OcrTexts>
                            <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="9">
                              <uc:OcrTextInfo Region="332, 8, 30, 14" Text="Open" />
                              <uc:OcrTextInfo Region="312, 22, 84, 12" Text="Customization" />
                              <uc:OcrTextInfo Region="398, 24, 40, 14" Text="Export" />
                              <uc:OcrTextInfo Region="312, 38, 34, 12" Text="Panel" />
                              <uc:OcrTextInfo Region="398, 40, 12, 10" Text="to" />
                              <uc:OcrTextInfo Region="398, 54, 34, 12" Text="Excel" />
                              <uc:OcrTextInfo Region="12, 84, 26, 12" Text="Add" />
                              <uc:OcrTextInfo Region="40, 86, 12, 12" Text="to" />
                              <uc:OcrTextInfo Region="56, 88, 20, 10" Text="run" />
                            </scg:List>
                          </uc:CVCache.OcrTexts>
                        </uc:CVCache>
                      </scg:List>
                    </uc:CvCacheContainer.Caches>
                  </uc:CvCacheContainer>
                </p:CVScope.DesignTimeCacheContainer>
                <p:CVScope.OCREngine>
                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <p1:UiPathScreenOCR Endpoint="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="Pg8i1BE9eD1IdNbef1J8dDhlTBQ93SvEbN7LGvOt29rzNtwkQB+MXgpcGGyxjzOl" ComputeSkewAngle="False" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,25.333333333333332" sap2010:WorkflowViewState.IdRef="UiPathScreenOCR_7" Image="[Image]" Language="en" Profile="Screen" Scale="1" Timeout="100000" />
                  </ActivityFunc>
                </p:CVScope.OCREngine>
                <p:CVScope.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ef66c8e3-7a8e-4f8e-8fc8-d0b2c324d469" InformativeScreenshot="a7383630bde892310408712f8de2d294" Selector="&lt;webctrl parentid='CP_BDParamAcctListListApp' tag='TABLE' /&gt;&lt;webctrl css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td' parentid='CP_BDParamAcctListListApp' tableCol='1' tableRow='1' tag='TD' /&gt;" WaitForReady="INTERACTIVE">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                  </ui:Target>
                </p:CVScope.Target>
                <p:CVScope.UseLocalServer>
                  <InArgument x:TypeArguments="x:Boolean" />
                </p:CVScope.UseLocalServer>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:CVScope>
              <ui:Click AlterIfDisabled="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="5000" DisplayName="Click the 'NEXT' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="cee1d12c-f0d0-4e0d-a4a6-dfdd6e6fba71" InformativeScreenshot="6e5bfb5bd7641ecdd06a1ab5f0942308" Selector="&lt;webctrl css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;div&amp;gt;table' idx='2' tableCol='1' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tableRow='1' tag='IMG' aaname='Next' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:Click AlterIfDisabled="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="5000" DisplayName="Click the 'RUN NOW' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="62dfb9c2-0575-48d7-939a-d14e69edb146" InformativeScreenshot="09aba95210e4e8e179921a36bfa899dd" Selector="&lt;webctrl css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;div&amp;gt;table' idx='2' tableCol='1' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tableRow='1' tag='IMG' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click  the 'OK'" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ef7201c1-60c1-4170-91f6-e0c3ea2939bd" InformativeScreenshot="e4fd7ebd1565fddef47811b84de5723c" Selector="&lt;webctrl tag='BUTTON' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'Refresh' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d47dcfd0-efca-471c-af7a-73bf1b8f6a21" InformativeScreenshot="ff5deabf9e51109ea66ca91bbdecb64e" Selector="&lt;webctrl tableRow='1' tag='IMG' alt='Refresh List' idx='2' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'Completed' button" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f618429b-bc9a-4bb7-8288-f054fc3fc4e7" InformativeScreenshot="ddbc7f84359355df0dce49335e7b283f" Selector="&lt;webctrl css-selector='body&amp;gt;form&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table&amp;gt;tbody&amp;gt;tr&amp;gt;td&amp;gt;table' tableCol='1' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tableRow='1' tag='TD' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:Click.Target>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Click>
              <Flowchart sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                <Flowchart.Variables>
                  <Variable x:TypeArguments="x:Boolean" Name="bool_download" />
                </Flowchart.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <av:Point x:Key="ShapeLocation">270,2.6666666666666643</av:Point>
                    <av:Size x:Key="ShapeSize">60,74.66666666666667</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">300,77.33333333333334 300,103</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Flowchart.StartNode>
                  <x:Reference>__ReferenceID1</x:Reference>
                </Flowchart.StartNode>
                <FlowStep x:Name="__ReferenceID0">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">10,383</av:Point>
                      <av:Size x:Key="ShapeSize">200,54</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'Downloaded' icon" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT">
                    <ui:Click.CursorPosition>
                      <ui:CursorPosition Position="Center">
                        <ui:CursorPosition.OffsetX>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetX>
                        <ui:CursorPosition.OffsetY>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:CursorPosition.OffsetY>
                      </ui:CursorPosition>
                    </ui:Click.CursorPosition>
                    <ui:Click.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1cc3a5b3-a036-48a2-a691-72437eb8e2b2" InformativeScreenshot="64677e303ee4822073e0055b1f2b8657" Selector="[string.Format(&quot;&lt;webctrl class='dxgvTable' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tag='TD' aaname='{0}' /&gt;&lt;nav up='1' /&gt;&lt;webctrl aaname='Download' tag='IMG' class='dxgvCommandColumnItem dxgv__cci' /&gt;&quot;, str_runName)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:Click.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Click>
                </FlowStep>
                <FlowStep x:Name="__ReferenceID1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,103</av:Point>
                      <av:Size x:Key="ShapeSize">200,54</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,157 300,207</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:UiElementExists DisplayName="Element Exists" Exists="[bool_download]" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                    <ui:UiElementExists.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4d818422-e670-4e4d-83c8-7c2eda20717b" Selector="[string.Format(&quot;&lt;webctrl class='dxgvTable' tableRow='1' tag='TABLE' /&gt;&lt;webctrl tag='TD' aaname='{0}' /&gt;&lt;nav up='1' /&gt;&lt;webctrl aaname='Download' tag='IMG' class='dxgvCommandColumnItem dxgv__cci' /&gt;&quot;, str_runName)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:UiElementExists.Target>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:UiElementExists>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID2" Condition="[bool_download]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="78.66666666666667,86.66666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_1" True="{x:Reference __ReferenceID0}">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">260.6666666666667,207</av:Point>
                          <av:Size x:Key="ShapeSize">78.66666666666667,86.66666666666667</av:Size>
                          <av:PointCollection x:Key="TrueConnector">260.6666666666667,250.33333333333334 110,250.33333333333334 110,383</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">339.33333333333337,250.33333333333334 400,250.33333333333334 400,363</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">300,363</av:Point>
                              <av:Size x:Key="ShapeSize">200,54</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">500,390 530,390 530,130 400,130</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click the 'Refresh' button" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="Click_16" KeyModifiers="None" MouseButton="BTN_LEFT">
                            <ui:Click.CursorPosition>
                              <ui:CursorPosition Position="Center">
                                <ui:CursorPosition.OffsetX>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetX>
                                <ui:CursorPosition.OffsetY>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:CursorPosition.OffsetY>
                              </ui:CursorPosition>
                            </ui:Click.CursorPosition>
                            <ui:Click.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d47dcfd0-efca-471c-af7a-73bf1b8f6a21" InformativeScreenshot="ff5deabf9e51109ea66ca91bbdecb64e" Selector="&lt;webctrl tableRow='1' tag='IMG' alt='Refresh List' idx='2' /&gt;">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:Click.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Click>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
                <x:Reference>__ReferenceID2</x:Reference>
                <x:Reference>__ReferenceID3</x:Reference>
              </Flowchart>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_downloadFilePath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Directory.GetFiles(  "C:\Users\Prasanth187\Downloads\").OrderByDescending(function(x) new FileInfo(x).LastWriteTime).FirstOrDefault]</InArgument>
                </Assign.Value>
              </Assign>
              <uascw:ExtractFiles Content="{x:Null}" DestinationFolderInfo="{x:Null}" File="{x:Null}" Password="{x:Null}" CodePage="Default" DestinationFolder="[&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_folderDate+&quot;\FTC&quot;]" DisplayName="Extract/Unzip Files" ExtractToADedicatedFolder="True" FileToExtract="[str_downloadFilePath]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="ExtractFiles_2" SkipUnsupportedFiles="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </uascw:ExtractFiles>
            </Sequence>
            <Sequence DisplayName="DATA_EXTRACTION - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="arr_FTC" />
                <Variable x:TypeArguments="x:String" Name="str_assestGrandTotalMarketValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="572,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[arr_FTC]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\"+ str_folderDate+"\FTC\")]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="572,14760" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[arr_FTC]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="538,14570" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="str_pdfText" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="[currentItem]" sap:VirtualizedContainerService.HintSize="496,84" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[str_pdfText]" />
                      <Sequence DisplayName="Extraction - Sequence" sap:VirtualizedContainerService.HintSize="496,16865.333333333332" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="str_equities" />
                          <Variable x:TypeArguments="x:String" Name="str_equitiesMarketValue" />
                          <Variable x:TypeArguments="x:String" Name="str_equitiesUnrealized" />
                          <Variable x:TypeArguments="x:String" Name="str_grandTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingTotalCash" />
                          <Variable x:TypeArguments="x:String" Name="str_fixedIncomeHighYieldBonds" />
                          <Variable x:TypeArguments="x:String" Name="str_grandTotalMarketValue" />
                          <Variable x:TypeArguments="x:String" Name="str_commonHealthCare" />
                          <Variable x:TypeArguments="x:String" Name="str_totalUSSmall" />
                          <Variable x:TypeArguments="x:String" Name="str_industryGrandTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingCommonStock" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingUSInflation" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingCash" />
                          <Variable x:TypeArguments="x:String" Name="str_equitiesUSLarge" />
                          <Variable x:TypeArguments="x:String" Name="str_subAssestClassGrandTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_pieChartFixedIncome" />
                          <Variable x:TypeArguments="x:String" Name="str_securityCash" />
                          <Variable x:TypeArguments="x:String" Name="str_securityFixedIncomeTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_securityGrandTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingCashDreyfus" />
                          <Variable x:TypeArguments="x:String" Name="str_equitiesFastenal" />
                          <Variable x:TypeArguments="x:String" Name="str_totalEquitiesTotalCost" />
                          <Variable x:TypeArguments="x:String" Name="str_appleIncCom" />
                          <Variable x:TypeArguments="x:String" Name="str_totalCommonStock" />
                          <Variable x:TypeArguments="x:String" Name="variable1" />
                          <Variable x:TypeArguments="x:String" Name="str_fixedIncomeHighYieldBondsMarket" />
                          <Variable x:TypeArguments="x:String" Name="str_grandTotalUnrealizedGL" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingBairdIntermediate" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingAbbvieIncCom" />
                          <Variable x:TypeArguments="x:String" Name="str_analogDevicesIncCom" />
                          <Variable x:TypeArguments="x:String" Name="str_developedInternationalLarge" />
                          <Variable x:TypeArguments="x:String" Name="str_pimcoIncomeFund" />
                          <Variable x:TypeArguments="x:String" Name="str_sectorGrandTotalTotalCost" />
                          <Variable x:TypeArguments="x:String" Name="str_holdingEquitiesUSLargeCap" />
                          <Variable x:TypeArguments="x:String" Name="str_baringsCorportate" />
                          <Variable x:TypeArguments="x:String" Name="str_subGrandTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_microsoftCorp" />
                          <Variable x:TypeArguments="x:String" Name="str_pepsicoIncCom" />
                          <Variable x:TypeArguments="x:String" Name="str_industryConsumer" />
                          <Variable x:TypeArguments="x:String" Name="str_industryMiscellaneous" />
                          <Variable x:TypeArguments="x:String" Name="str_sectorCommonStock" />
                          <Variable x:TypeArguments="x:String" Name="str_USSmallCap" />
                          <Variable x:TypeArguments="x:String" Name="str_sectorGrandTotal" />
                          <Variable x:TypeArguments="x:String" Name="str_entergyCrop" />
                          <Variable x:TypeArguments="x:String" Name="str_taxMicrosoft" />
                          <Variable x:TypeArguments="x:String" Name="str_unitedTechnologies" />
                          <Variable x:TypeArguments="x:String" Name="str_taxGrandTotal" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equities]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"EQUITIES\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equitiesMarketValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_equities,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(0)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_equitiesMarketValue]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equitiesUnrealized]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_equities,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(1)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_equitiesUnrealized]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_grandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_grandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_grandTotal,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(2)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_grandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingTotalCash]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"TOTAL\sCASH\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingTotalCash]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_holdingTotalCash,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(3)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingTotalCash]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_fixedIncomeHighYieldBonds]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"HIGH\sYIELD\sBONDS\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_18">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_fixedIncomeHighYieldBonds]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_fixedIncomeHighYieldBonds,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(4)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_fixedIncomeHighYieldBonds]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_grandTotalMarketValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_grandTotalMarketValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (   str_grandTotalMarketValue,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(5)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_grandTotalMarketValue]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_commonHealthCare]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"HEALTH\sCARE\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_commonHealthCare]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_commonHealthCare,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_25">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(6)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_commonHealthCare]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_totalUSSmall]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"TOTAL\sU\WS\W\sSMALL\sCAP\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_totalUSSmall]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_totalUSSmall,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(7)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_totalUSSmall]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_industryGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"HOLDING\s.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_industryGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_industryGrandTotal,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_31">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(8)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_industryGrandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_32">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingCommonStock]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ESTACCOUNT\sSUMMARY\sBY\sSECTOR.*[\r\n]+EUSTIS\sWALCOTT\sIRA\sR\WO\sREPORT\sAS\sOF.*[\r\n]+HOLDING.*[\r\n]+CASH.*[\r\n]+COMMON\sSTOCK\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_33">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingCommonStock]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_holdingCommonStock,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(9)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingCommonStock]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_35">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingUSInflation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"U\WS\W\sINFLATION\sINDEXED\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_36">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingUSInflation]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_holdingUSInflation,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_37">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(10)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingUSInflation]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_38">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingCash]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"CASH.*[\r\n]+TOTAL\sCASH\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_39">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingCash]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_holdingCash,"*")(3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_40">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(11)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingCash]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_41">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equitiesUSLarge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"EQUITIES.*[\r\n]+DEVELOPED\sINTERNATIONAL\sLARGE\sCAP.*[\r\n]+U\WS\W\sSMALL\sCAP.*[\r\n]+US\sLARGE\sCAP\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_42">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equitiesUSLarge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_equitiesUSLarge,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_43">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(12)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_equitiesUSLarge]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_44">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_subAssestClassGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"TOTAL\sFIXED\sINCOME.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_45">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_subAssestClassGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_subAssestClassGrandTotal,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_46">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(13)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_subAssestClassGrandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_47">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_securityCash]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"SECURITY DESCRIPTION.*[\r\n]+CASH\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_48">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_securityCash]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_securityCash,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="15Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_49">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(15)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_securityCash]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_50">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_securityFixedIncomeTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"SECURITY\sDESCRIPTION.*[\r\n]+CASH.*[\r\n]+EQUITIES.*[\r\n]+FIXED\sINCOME\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_51">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_securityFixedIncomeTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_securityFixedIncomeTotal,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_52">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(16)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_securityFixedIncomeTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_53">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_securityGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"SECURITY\sDESCRIPTION.*[\r\n]+CASH.*[\r\n]+EQUITIES.*[\r\n]+FIXED\sINCOME.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_54">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_securityGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_subAssestClassGrandTotal,"*")(3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_55">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(17)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_securityGrandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_56">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingCashDreyfus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"DREYFUS\sGOVT\sCASH\sMANAGEMENT-INSTL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingCashDreyfus]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_holdingCashDreyfus,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_58">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(18)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingCashDreyfus]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_59">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equitiesFastenal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"FASTENAL\sCO\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_60">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_equitiesFastenal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_equitiesFastenal,"*")(3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_61">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(19)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_equitiesFastenal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_62">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_totalEquitiesTotalCost]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"SPDR\sS&amp;P\sBIOTECH\sETF.*[\r\n]+TOTAL\sEQUITIES\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_63">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_totalEquitiesTotalCost]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalEquitiesTotalCost,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_64">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(20)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_totalEquitiesTotalCost]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_65">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_assestGrandTotalMarketValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"VANGUARD\sINTERMEDIATE\sTAX-EXEMPT.*[\r\n]+ADMIRAL.*[\r\n]+TOTAL\sFIXED\sINCOME.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_66">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_assestGrandTotalMarketValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_assestGrandTotalMarketValue,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_67">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(21)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_assestGrandTotalMarketValue]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_68">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_appleIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"APPLE\sINC\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_69">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_appleIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_appleIncCom,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_70">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(22)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_appleIncCom]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_71">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_totalCommonStock]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"TOTAL\sCOMMON\sSTOCK\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_72">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_totalCommonStock]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalCommonStock,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_73">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(23)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_totalCommonStock]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_74">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_fixedIncomeHighYieldBondsMarket]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"TOTAL\sHIGH\sYIELD\sBONDS\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_75">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_fixedIncomeHighYieldBondsMarket]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_fixedIncomeHighYieldBondsMarket,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_76">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(24)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_fixedIncomeHighYieldBondsMarket]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_77">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_grandTotalUnrealizedGL]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_78">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_grandTotalUnrealizedGL]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_grandTotalUnrealizedGL,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_79">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(25)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_grandTotalUnrealizedGL]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_80">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingBairdIntermediate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"PIMCO INCOME FUND - INSTL.*[\r\n]+BAIRD\sINTERMEDIATE\sBD\s-INSTL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_81">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingBairdIntermediate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (   str_holdingBairdIntermediate,"*")(6)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_82">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(26)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_grandTotalUnrealizedGL]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_83">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingAbbvieIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ABBVIE\sINC\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_84">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingAbbvieIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (    str_holdingAbbvieIncCom,"*")(7)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_85">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(27)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingAbbvieIncCom]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_86">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_analogDevicesIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ANALOG\sDEVICES\sINC\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_87">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_analogDevicesIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (     str_analogDevicesIncCom,"*")(3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_88">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(28)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_analogDevicesIncCom]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_89">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_developedInternationalLarge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"DEVELOPED\sINTERNATIONAL\sLARGE\sCAP.*[\r\n]+VANGUARD\sFTSE\sDEVELOPED\sETF\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_90">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_developedInternationalLarge]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (      str_developedInternationalLarge,"*")(4)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_91">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(29)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_developedInternationalLarge]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_92">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_pimcoIncomeFund]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"HOLDING.*[\r\n]+.*[\r\n]+OTHER\sFIXED\sINCOME.*[\r\n]+PIMCO\sINCOME\sFUND\s-\sINSTL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_93">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_pimcoIncomeFund]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_pimcoIncomeFund,"*")(6)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_94">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(30)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_pimcoIncomeFund]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_95">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_sectorGrandTotalTotalCost]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ISHARES\sCORE\sS&amp;P\s500\sETF\s.*[\r\n]+TOTAL\sUS\sLARGE\sCAP\s-\sFUNDS.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_96">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_sectorGrandTotalTotalCost]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_sectorGrandTotalTotalCost,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_97">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(31)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_sectorGrandTotalTotalCost]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_98">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingEquitiesUSLargeCap]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"EQUITIES\s•\sUS\sLARGE\sCAP.*[\r\n]+APPLE\sINC\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_99">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_holdingEquitiesUSLargeCap]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_holdingEquitiesUSLargeCap,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_100">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(32)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_holdingEquitiesUSLargeCap]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_101">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_baringsCorportate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"FIXED\sINCOME\s•\sHIGH\sYIELD\sBONDS.*[\r\n]+BARINGS\sCORPORATE\sINVESTORS\sFUND\sMCI\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_102">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_baringsCorportate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (   str_baringsCorportate,"*")(4)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_103">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(33)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_baringsCorportate]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_104">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_subGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"TOTAL\sU\WS\W\sINFLATION\sINDEXED.*[\r\n]+TOTAL\sFIXED\sINCOME.*[\r\n]+GRAND\sTOTAL\s(.*)")(0).Groups(1).Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_105">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_subGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (    str_subGrandTotal,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_106">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(34)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_subGrandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_107">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_microsoftCorp]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"SOFTWARE\sINDX\sFD.*[\r\n]+MICROSOFT\sCORP\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_108">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_microsoftCorp]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (     str_microsoftCorp,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_109">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(35)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_microsoftCorp]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_110">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_pepsicoIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ADMRL\sSHS.*[\r\n]+PEPSICO\sINC\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_111">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_pepsicoIncCom]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_pepsicoIncCom,"*")(7)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_112">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(36)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_pepsicoIncCom]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_113">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_industryConsumer]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"TECHNOLOGY.*[\r\n]+CONSUMER\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_114">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_industryConsumer]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_industryConsumer,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_115">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(37)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_industryConsumer]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_116">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_industryMiscellaneous]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"YIELD.*[\r\n]+MISCELLANEOUS\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_117">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_industryMiscellaneous]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (   str_industryMiscellaneous,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_118">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(38)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_industryMiscellaneous]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_119">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_sectorCommonStock]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ANNUAL\sINCOME\s[\r\n]+CASH.*[\r\n]+COMMON\sSTOCK\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_120">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_sectorCommonStock]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (    str_sectorCommonStock,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_121">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(39)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_sectorCommonStock]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_122">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_USSmallCap]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ANNUAL\sINCOME.*[\r\n]+U\WS\W\sSMALL\sCAP\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_123">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_USSmallCap]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (     str_USSmallCap,"*")(2)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_124">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(40)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_USSmallCap]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_125">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_sectorGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"ANNUAL\sINCOME.*[\r\n]+U\WS\W\sSMALL CAP.*[\r\n]+US\sLARGE\sCAP\s-\sFUNDS.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_126">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_sectorGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_sectorGrandTotal,"*")(1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_127">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(41)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_sectorGrandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_128">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_entergyCrop]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"EMERSON\sELECTRIC\sCO\sCOM\s.*[\r\n]+ENTERGY\sCORP\s\WNEW\W\sCOM(.*)")(4).Groups(1).Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_129">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_entergyCrop]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_entergyCrop,"*")(3)+"-"+Split (  str_entergyCrop,"*")(2)+"-"+Split (  str_entergyCrop,"*")(4).Substring(3,4)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_130">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(42)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_entergyCrop]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_131">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_taxMicrosoft]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(str_pdfText,"MICROSOFT\sCORP\sCOM\s(.*)").Groups(1).Value.Replace(" ","*")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_132">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_taxMicrosoft]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (   str_taxMicrosoft,"*")(7)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_133">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(43)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_taxMicrosoft]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_134">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_unitedTechnologies]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"UNITED\sTECHNOLOGIES\sCORP\sCOM\s(.*)")(7).Groups(1).Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_135">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_unitedTechnologies]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split ( str_unitedTechnologies,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_136">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(44)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_unitedTechnologies]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_137">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_taxGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match( str_pdfText,"WEYERHAEUSER\sCO\sCOM.*[\r\n]+GRAND\sTOTAL\s(.*)").Groups(1).Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_138">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_taxGrandTotal]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_taxGrandTotal,"*")(0)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_139">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[dt_FTCReport. Rows(45)(7)]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[str_taxGrandTotal]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
            <Delay DisplayName=" Delay 10 seconds" Duration="00:00:10" sap:VirtualizedContainerService.HintSize="450,92" sap2010:WorkflowViewState.IdRef="Delay_1" />
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_FTCReport]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd2:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd2:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1050" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="str_expectedValue" />
                      <Variable x:TypeArguments="x:String" Name="str_actualValue" />
                      <Variable x:TypeArguments="x:Double" Name="int_value" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_140">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CurrentRow(6).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[str_expectedValue.Contains(&quot;(&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_145">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[str_expectedValue.Replace("(","-").replace(")","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18" />
                      </If.Else>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_141">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[str_expectedValue.Replace("(","").Replace(")","").Replace(",","").Replace(" ","").Replace("$","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_142">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace( str_expectedValue,"\.0+\b|(?&lt;=\.\d*?)0+\b","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_143">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace( str_expectedValue,"[\r\n]+","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_144">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[CurrentRow(7).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[str_actualValue.Contains(&quot;(&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,266.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_146">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("(","-").replace(")","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20" />
                      </If.Else>
                    </If>
                    <If Condition="[str_actualValue.Contains(&quot;%&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,733.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_16">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Double" Name="int_value2" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_147">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("%","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_148">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">[int_value]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">[Convert.ToDouble (str_actualValue)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_149">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Double">[int_value2]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">[int_value/100]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_150">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[int_value2.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,423.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_21">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_151">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("(","").Replace(")","").Replace(",","").Replace(" ","").Replace("$","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_152">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(  str_actualValue,"\.0+\b|(?&lt;=\.\d*?)0+\b","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_153">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(  str_actualValue,"[\r\n]+","")]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                    <If Condition="[str_expectedValue.Trim.TrimStart.TrimEnd.Equals(str_actualValue.trim.TrimStart. TrimEnd)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_154">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[CurrentRow(8)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["Pass"]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[str_expectedValue.Trim.TrimStart.TrimEnd +&quot;=&quot;+str_actualValue.trim.TrimStart. TrimEnd+&quot; -&quot;+&quot;Pass&quot;]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[str_expectedValue.Trim.TrimStart.TrimEnd +&quot;=&quot;+str_actualValue.trim.TrimStart. TrimEnd+&quot;-&quot;+&quot;Fail&quot;]" />
                          <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_155">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[CurrentRow(8)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">["Fail"]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_FTCReport]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="450,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Master" WorkbookPath="[&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_folderDate+&quot;\FTC_Advisor_Report.xlsx&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:WriteRange>
          </Sequence>
        </ActivityAction>
      </ui:OpenBrowser.Body>
    </ui:OpenBrowser>
  </Sequence>
</Activity>