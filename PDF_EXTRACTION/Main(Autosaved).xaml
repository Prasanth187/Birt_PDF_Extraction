<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1150,2768" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>GlobalVariablesT1PNoYwrqg</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="512,3502.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_pdfText" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_CG" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_CG]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="450,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Documents\PDF_Extraction\CG_Report_Mapping.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="C:\Users\Prasanth187\Documents\PDF_Extraction\CAP Individual\CAP Individual\Twenty_Largest_Equity_Holdings_Comparison.392622_20231211071548.pdf" sap:VirtualizedContainerService.HintSize="450,84" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[str_pdfText]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadPDFText>
    <Sequence DisplayName="Account_Asset_Mix - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Account_Number" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(\d*\W\d*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="As of Date " sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="As of Date " sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;CG&quot;,&quot;Account Asset Mix&quot;, str_accountNumber, str_asofDate,&quot;&quot;,&quot;Cash &amp; Cash Equivalents/Equity % of MV/Total&quot;,&quot;542501 /62.2 / 15,581,723&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;}]" DataTable="[dt_CG]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AddDataRow>
    </Sequence>
    <Sequence DisplayName="Account_Review_Summary_Short - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_beginningValueYTD" />
        <Variable x:TypeArguments="x:String" Name="str_beginningValueDate" />
        <Variable x:TypeArguments="x:String" Name="str_subsequentAdditions" />
        <Variable x:TypeArguments="x:String" Name="str_beginningValue" />
        <Variable x:TypeArguments="x:String" Name="str_subsequentAdditionsYTD" />
        <Variable x:TypeArguments="x:String" Name="str_subsequentAdditionsDate" />
        <Variable x:TypeArguments="x:String" Name="str_capitalAppreciation" />
        <Variable x:TypeArguments="x:String" Name="str_capitalAppreciationYTD" />
        <Variable x:TypeArguments="x:String" Name="str_capitalAppreciationDate" />
        <Variable x:TypeArguments="x:String" Name="str_cashAsset" />
        <Variable x:TypeArguments="x:String" Name="str_cashAssetYTD" />
        <Variable x:TypeArguments="x:String" Name="str_cashAssetDate" />
        <Variable x:TypeArguments="x:String" Name="str_administrative" />
        <Variable x:TypeArguments="x:String" Name="str_administrativeYTD" />
        <Variable x:TypeArguments="x:String" Name="str_administrativeDate" />
        <Variable x:TypeArguments="x:String" Name="str_currentValue" />
        <Variable x:TypeArguments="x:String" Name="str_currentValueYTD" />
        <Variable x:TypeArguments="x:String" Name="str_currentValueDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountYTD" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountResults" />
        <Variable x:TypeArguments="x:String" Name="str_QTD" />
        <Variable x:TypeArguments="x:String" Name="str_YTD" />
        <Variable x:TypeArguments="x:String" Name="str_oneYear" />
        <Variable x:TypeArguments="x:String" Name="str_threeYear" />
        <Variable x:TypeArguments="x:String" Name="str_fiveYear" />
        <Variable x:TypeArguments="x:String" Name="str_tenYear" />
        <Variable x:TypeArguments="x:String" Name="str_lifeTime" />
        <Variable x:TypeArguments="x:String" Name="str_startDate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Account_Number" sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(\d*\W\d*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="As of Date " sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="As of Date " sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Beginning Value - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Beginning Value" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_beginningValue]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (str_beginningValue)]" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_beginningValue,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_beginningValue,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_2">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_3">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Subsequent additions - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Subsequent additions" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_subsequentAdditions]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Subsequent\sadditions\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty ( str_subsequentAdditions)]" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_subsequentAdditionsYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(  str_subsequentAdditions,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_subsequentAdditionsDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(  str_subsequentAdditions,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_4">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_24">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_5">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_17">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Capital appreciation - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Capital appreciation" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_15">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_capitalAppreciation]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Capital\sappreciation\s\W\sdepreciation\sand\sordinary\sincome\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (  str_capitalAppreciation)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_16">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_capitalAppreciationYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(   str_capitalAppreciation,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_capitalAppreciationDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(   str_capitalAppreciation,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="CommentOut_6">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="CommentOut_7">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Cash and Asset - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Cash and Asset" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_18">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_cashAsset]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Cash and asset distributions\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (  str_cashAsset)]" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_24">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_cashAssetYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(    str_cashAsset,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_cashAssetDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_cashAsset,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_8">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_25">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_9">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Administrative - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_31">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Administrative" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_21">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_administrative]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Administrative\sand\sother\sexpenses\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (   str_administrative)]" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_28">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_administrativeYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(  str_administrative,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_23">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_administrativeDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split(  str_administrative,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_10">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_11">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_30">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Current value - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_36">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Administrative" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_32">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_currentValue]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Current\svalue\sof\saccount\sassets\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (  str_currentValue)]" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_32">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_33">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_currentValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_currentValue,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_currentValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_currentValue,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_12">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_38">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_13">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_35">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_39">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Total account - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_41">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Total account" sap:VirtualizedContainerService.HintSize="510,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_35">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\saccount\s\WNet\sof\sfees\W\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (   str_totalAccount)]" sap:VirtualizedContainerService.HintSize="510,563.3333333333334" sap2010:WorkflowViewState.IdRef="If_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_37">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,298" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_36">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_totalAccountYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_totalAccount,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_37">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_totalAccountDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split( str_totalAccount,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_14">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_39">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value YTD" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_40">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueYTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(1).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="510,54" sap2010:WorkflowViewState.IdRef="CommentOut_15">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="496,196" sap2010:WorkflowViewState.IdRef="Sequence_40">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Beginning value date" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_41">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_beginningValueDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(\W\d*\W\d*\W\d*)(\W\d*\W\d*\W\d*\W\d*)").Groups(2).Value]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
      </Sequence>
      <Sequence DisplayName="Investment Results - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_42">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Total Account" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_42">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_totalAccountResults]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total Account\s*(\d.*\d(?= ))\s*(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[String.IsNullOrEmpty (str_totalAccountResults)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence sap:VirtualizedContainerService.HintSize="300,81.33333333333333" sap2010:WorkflowViewState.IdRef="Sequence_43">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence sap:VirtualizedContainerService.HintSize="476,924.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_44">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_QTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_45">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_YTD]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(1)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_47">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_oneYear]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(2)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_48">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_threeYear]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(3)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_49">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_fiveYear]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(4)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_50">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_tenYear]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(5)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_51">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_lifeTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Split (str_totalAccountResults,"-")(6)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </If.Else>
        </If>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_43">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_startDate]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total Account\s*(\d.*\d(?= ))\s*(.*)").Groups(2).Value]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_QTD+ Environment.NewLine + str_YTD+  Environment.NewLine+ str_oneYear+ Environment.NewLine+ str_threeYear+ Environment.NewLine+ str_fiveYear+ Environment.NewLine+ str_tenYear+ Environment.NewLine+ str_lifeTime+  Environment.NewLine+ str_startDate]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:LogMessage>
      </Sequence>
      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;CG&quot;,&quot;Account Review Summary Short&quot;, str_accountNumber, str_asofDate,&quot;&quot;,&quot;Cash &amp; Cash Equivalents/Equity % of MV/Total&quot;,&quot;542501 /62.2 / 15,581,723&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;}]" DataTable="[dt_CG]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AddDataRow>
    </Sequence>
    <Sequence DisplayName="Asset_Allocation_Over_Time - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_45">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_cashEquivalentsMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_cashEquivalentsMarketValueOne" />
        <Variable x:TypeArguments="x:String" Name="str_cashEquivalents" />
        <Variable x:TypeArguments="x:String" Name="str_cashEquivalentsone" />
        <Variable x:TypeArguments="x:String" Name="str_cash" />
        <Variable x:TypeArguments="x:String" Name="str_equityMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_equity" />
        <Variable x:TypeArguments="x:String" Name="str_equityMarketValueone" />
        <Variable x:TypeArguments="x:String" Name="str_equityMV" />
        <Variable x:TypeArguments="x:String" Name="str_equityMVOne" />
        <Variable x:TypeArguments="x:String" Name="str_total" />
        <Variable x:TypeArguments="x:String" Name="str_totalOne" />
        <Variable x:TypeArguments="x:String" Name="str_totalSecond" />
        <Variable x:TypeArguments="x:String" Name="str_totalMV" />
        <Variable x:TypeArguments="x:String" Name="str_totalMVOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateSeond" />
        <Variable x:TypeArguments="x:String" Name="str_asofdate" />
        <Variable x:TypeArguments="x:String" Name="str_date" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Account_Number" sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_53">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(\d*\W\d*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_69">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))\s(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_72">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateOne,("MMMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_70">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSeond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))\s(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))").Groups(10).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_73">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSeond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateSeond,("MMMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_71">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofdate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))\s(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))").Groups(10).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="Cash and Cash Equivalents Market Value - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_46">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Cash" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_54">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_cash]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Cash\sand\sCash\sEquivalents\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_55">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_cashEquivalentsMarketValue]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_cash,"-")(0)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_56">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_cashEquivalents]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_cash,"-")(1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_57">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_cashEquivalentsMarketValueOne]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_cash,"-")(2)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_58">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_cashEquivalentsone]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_cash,"-")(3)]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence DisplayName="Equity Market Value - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_47">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Equity" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_59">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_equity]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Equity\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_60">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_equityMarketValue]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(  str_equity,"-")(0)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_61">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_equityMV]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_equity,"-")(1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_62">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_equityMarketValueone]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_equity,"-")(2)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_63">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_equityMVOne]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[split( str_equity,"-")(3)]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence DisplayName="Total - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_48">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Equity" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_64">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_total]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_65">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_totalOne]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(  str_total,"-")(0)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_66">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_totalMV]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(  str_total,"-")(1)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_67">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_totalSecond]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(  str_total,"-")(2)]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_68">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_totalMVOne]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">[split(  str_total,"-")(3)]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_cashEquivalentsMarketValue+ Environment.NewLine+str_cashEquivalents+ Environment.NewLine+str_cashEquivalentsMarketValueOne+ Environment.NewLine+str_cashEquivalentsone+ Environment.NewLine+str_equityMarketValue+ Environment.NewLine+str_equityMV+ Environment.NewLine+str_equityMarketValueone+ Environment.NewLine+str_equityMVOne+ Environment.NewLine+str_totalOne+ Environment.NewLine+str_totalMV+ Environment.NewLine+str_totalSecond+ Environment.NewLine+str_totalMVOne]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Change in Value Since Inception Date - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_51">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_beginningValue" />
        <Variable x:TypeArguments="x:String" Name="str_capitalAppreciationDepreciation" />
        <Variable x:TypeArguments="x:String" Name="str_otherExpenses" />
        <Variable x:TypeArguments="x:String" Name="str_totalChangeinValue" />
        <Variable x:TypeArguments="x:String" Name="str_endingValue" />
        <Variable x:TypeArguments="x:String" Name="str_inceptionDate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Account_Number" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_74">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(\d*\W\d*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_82">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_inceptionDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Inception\sDate\W\s(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_75">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_76">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_77">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_beginningValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Beginning\svalue\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_78">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_capitalAppreciationDepreciation]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Capital appreciation\Wdepreciation\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_79">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_otherExpenses]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Other\sexpenses\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_80">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalChangeinValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\schange\sin\svalue\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_81">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_endingValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Ending\svalue\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+  str_inceptionDate+ Environment.NewLine+ str_beginningValue+ Environment.NewLine+str_capitalAppreciationDepreciation+ Environment.NewLine+ str_otherExpenses+ Environment.NewLine+ str_totalChangeinValue+ Environment.NewLine+ str_endingValue]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Diversification by Sector and Industry - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_53">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalMaterials" />
        <Variable x:TypeArguments="x:String" Name="str_aerospaceDefense" />
        <Variable x:TypeArguments="x:String" Name="str_bankTotalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_realEstateTotalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_percent" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Account_Number" sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_83">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(\d*\W\d*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_84">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s(((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4}))").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_85">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_86">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalMaterials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sMaterials\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_87">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalMaterials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_totalMaterials,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_88">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_aerospaceDefense]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Aerospace\s\W\sDefense\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_89">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_aerospaceDefense]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_aerospaceDefense,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_91">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_bankTotalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Banks\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_92">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_bankTotalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_bankTotalAccount,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_93">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_realEstateTotalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sReal\sEstate\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_94">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_realEstateTotalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_realEstateTotalAccount,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_95">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_percent]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"GRACE\sINSTITUTE\s\nEquity\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_totalMaterials+ Environment.NewLine+ str_aerospaceDefense+ Environment.NewLine+  str_bankTotalAccount+ Environment.NewLine+ str_realEstateTotalAccount+ Environment.NewLine+ str_percent]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Diversification by Sector and Industry Over Time - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_55">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateSecond" />
        <Variable x:TypeArguments="x:String" Name="str_chemical" />
        <Variable x:TypeArguments="x:String" Name="str_totalHealthCare" />
        <Variable x:TypeArguments="x:String" Name="str_totalCommunicationService" />
        <Variable x:TypeArguments="x:String" Name="str_totalEquity" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_96">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_97">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_99">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateOne,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_98">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"\n((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_100">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[datetime.ParseExact ( str_asofDateSecond,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_101">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_chemical]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Chemicals\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_102">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_chemical]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_chemical,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_103">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalHealthCare]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sHealth\sCare\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_104">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalHealthCare]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalHealthCare,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_105">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCommunicationService]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sCommunication\sServices\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_106">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCommunicationService]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalCommunicationService,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_107">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEquity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"\nTotal\sEquity\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_108">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEquity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalEquity,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_chemical+ Environment.NewLine+ str_totalHealthCare+ Environment.NewLine+ str_totalCommunicationService+ Environment.NewLine+ str_totalEquity+ Environment.NewLine+ str_asofDateOne+ Environment.NewLine+ str_asofDateSecond]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Diversification by Sector and Security - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_57">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_lindePLC" />
        <Variable x:TypeArguments="x:String" Name="str_nestleSA" />
        <Variable x:TypeArguments="x:String" Name="str_totalHealthCare" />
        <Variable x:TypeArguments="x:String" Name="str_totalRealEstate" />
        <Variable x:TypeArguments="x:String" Name="str_percentage" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_109">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_110">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_111">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_113">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_lindePLC]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"LINDE\sPLC\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_114">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_lindePLC]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_lindePLC,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_115">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_nestleSA]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"NESTLE\sSA\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_116">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_nestleSA]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_nestleSA,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_117">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalHealthCare]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sHealth\sCare\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_118">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalHealthCare]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalHealthCare,"-")(2).Trim+"/"+Split ( str_totalHealthCare,"-")(3).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_119">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalRealEstate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sReal\sEstate\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_120">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalRealEstate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalRealEstate,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_121">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_percentage]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Fixed\sIncome\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_lindePLC+ Environment.NewLine+ str_nestleSA+ Environment.NewLine+ str_totalHealthCare+ Environment.NewLine+ str_totalRealEstate+ Environment.NewLine+ str_percentage]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Geographic Diversification - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_59">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_netherLand" />
        <Variable x:TypeArguments="x:String" Name="str_hongKong" />
        <Variable x:TypeArguments="x:String" Name="str_totalEmergingMarket" />
        <Variable x:TypeArguments="x:String" Name="str_percentage" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_122">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_123">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_124">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_125">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_netherLand]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Netherlands\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_126">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_netherLand]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_netherLand,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_127">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_hongKong]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Hong\sKong\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_128">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_hongKong]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_hongKong,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_129">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEmergingMarket]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sEmerging\sMarkets\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_130">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEmergingMarket]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalEmergingMarket,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_131">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_percentage]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Fixed\sIncome\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_netherLand+ Environment.NewLine+ str_hongKong+ Environment.NewLine+ str_totalEmergingMarket+ Environment.NewLine+ str_percentage]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Geographic Diversification Over Time - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_69">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateSecond" />
        <Variable x:TypeArguments="x:String" Name="str_europeanMonetaryUnion" />
        <Variable x:TypeArguments="x:String" Name="str_unitedKingdom" />
        <Variable x:TypeArguments="x:String" Name="str_totalMiddleEast" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_132">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_133">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_134">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateOne,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_135">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(9).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_136">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[datetime.ParseExact ( str_asofDateSecond,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_141">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_europeanMonetaryUnion]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Italy\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_142">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_europeanMonetaryUnion]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_europeanMonetaryUnion,"-")(0).Trim+"/"+Split (  str_europeanMonetaryUnion,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_143">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_unitedKingdom]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"United\sKingdom\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_144">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_unitedKingdom]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_unitedKingdom,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_145">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalMiddleEast]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sMiddle\sEast\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_146">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalMiddleEast]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalMiddleEast,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+  str_asofDateOne+ Environment.NewLine+  str_asofDateSecond+ Environment.NewLine+  str_europeanMonetaryUnion+ Environment.NewLine+ str_unitedKingdom+ Environment.NewLine+ str_totalMiddleEast]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Holdings by Asset Class - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_72">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_identifierQuantity" />
        <Variable x:TypeArguments="x:String" Name="str_identifierUnit" />
        <Variable x:TypeArguments="x:String" Name="str_identifierPrice" />
        <Variable x:TypeArguments="x:String" Name="str_nikeMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_nikeMV" />
        <Variable x:TypeArguments="x:String" Name="str_averageTotalCost" />
        <Variable x:TypeArguments="x:String" Name="str_averageUnit" />
        <Variable x:TypeArguments="x:String" Name="str_fixedIncomeMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_marketValueTotalCost" />
        <Variable x:TypeArguments="x:String" Name="str_marketValueUnrealizedGain" />
        <Variable x:TypeArguments="x:String" Name="str_marketValueLoss" />
        <Variable x:TypeArguments="x:String" Name="str_identifier" />
        <Variable x:TypeArguments="x:String" Name="str_nike" />
        <Variable x:TypeArguments="x:String" Name="str_FORTINET" />
        <Variable x:TypeArguments="x:String" Name="str_marketValue" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_147">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_149">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_150">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_151">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalMarketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total for Cash and Cash Equivalents\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_152">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalMarketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalMarketValue,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_153">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_identifier]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"CARLSBERG\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_154">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_identifier]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_identifier,"-")(0).Trim+"/"+Split (  str_identifier,"-")(1).Trim+"/"+Split (  str_identifier,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_155">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_nike]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"NIKE INC CL B\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_156">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_nike]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split ( str_nike,"-")(3).Trim+"/"+Split (  str_nike,"-")(4).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_157">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_FORTINET]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"FORTINET INC 1% 2026-03-15\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_159">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_FORTINET]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_FORTINET,"-")(5).Trim+"/"+Split ( str_FORTINET,"-")(6).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_161">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedIncomeMarketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total for Fixed Income\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_162">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedIncomeMarketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_fixedIncomeMarketValue,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_163">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_marketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sFixed\sIncome\s(.*)\n\sTOTAL\s(.*)").Groups(2).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_164">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_marketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_marketValue,"-")(0).Trim+"/"+Split ( str_marketValue,"-")(2).Trim+"/"+Split ( str_marketValue,"-")(3).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+  str_totalMarketValue+ Environment.NewLine+ str_identifier+ Environment.NewLine+ str_nike+ Environment.NewLine+ str_FORTINET+ Environment.NewLine+ str_fixedIncomeMarketValue+ Environment.NewLine+ str_marketValue]" />
    </Sequence>
    <Sequence DisplayName="Holdings by Asset Class and Country - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_74">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_incomeMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_iseralTotalCost" />
        <Variable x:TypeArguments="x:String" Name="str_deltaQuantity" />
        <Variable x:TypeArguments="x:String" Name="str_deitaIDentifier" />
        <Variable x:TypeArguments="x:String" Name="str_deltaAverageCost" />
        <Variable x:TypeArguments="x:String" Name="str_deltaTotalCost" />
        <Variable x:TypeArguments="x:String" Name="str_unitedStatesMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_unitedStatesMV" />
        <Variable x:TypeArguments="x:String" Name="str_totalCost" />
        <Variable x:TypeArguments="x:String" Name="str_unitedStates" />
        <Variable x:TypeArguments="x:String" Name="str_totalUnitedState" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_165">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_166">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_167">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_168">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_incomeMarketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total Japan\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_169">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_incomeMarketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_incomeMarketValue,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_170">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_iseralTotalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sIsrael\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_171">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_iseralTotalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_iseralTotalCost,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_172">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_unitedStates]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"DELTA\sAIR\sLINES\sINC\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_173">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_unitedStates]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_unitedStates,"-")(0).Trim+"/"+Split ( str_unitedStates,"-")(1).Trim+"/"+Split ( str_unitedStates,"-")(5).Trim+"/"+Split ( str_unitedStates,"-")(6).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_174">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalUnitedState]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"United\s*States\s*Total\s*United\s*States\s*(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_175">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalUnitedState]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split ( str_totalUnitedState,"-")(0).Trim+"/"+Split (  str_totalUnitedState,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_176">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"TOTAL\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_177">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalCost,"-")(3).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_incomeMarketValue+ Environment.NewLine+ str_iseralTotalCost+ Environment.NewLine+ str_unitedStates+ Environment.NewLine+ str_totalUnitedState+ Environment.NewLine+ str_totalCost]" />
    </Sequence>
    <Sequence DisplayName="Holdings by Asset Class and Country - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_76">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalforCurrencies" />
        <Variable x:TypeArguments="x:String" Name="str_CARLSBERG" />
        <Variable x:TypeArguments="x:String" Name="str_CARLSBERGQuantity" />
        <Variable x:TypeArguments="x:String" Name="str_CARLSBERGEstimationYield" />
        <Variable x:TypeArguments="x:String" Name="str_totalforSoftware" />
        <Variable x:TypeArguments="x:String" Name="str_totalforSoftwareMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_totalforSoftwareMV" />
        <Variable x:TypeArguments="x:String" Name="str_totalforSoftwareTotalCost" />
        <Variable x:TypeArguments="x:String" Name="str_capitalGoods" />
        <Variable x:TypeArguments="x:String" Name="str_capitalGoodsIdentifier" />
        <Variable x:TypeArguments="x:String" Name="str_capitalGoodsQuantity" />
        <Variable x:TypeArguments="x:String" Name="str_totalforTransportation" />
        <Variable x:TypeArguments="x:String" Name="str_totalforTransportationMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_totalforTransportationUnrealized" />
        <Variable x:TypeArguments="x:String" Name="str_totalCost" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_178">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_179">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_180">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_181">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforCurrencies]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sCurrencies\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_182">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforCurrencies]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalforCurrencies,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_183">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_CARLSBERG]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"CARLSBERG\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_184">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_CARLSBERG]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_CARLSBERG,"-")(1).Trim+"/"+Split ( str_CARLSBERG,"-")(8).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_185">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforSoftware]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sSoftware\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_186">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforSoftware]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalforSoftware,"-")(0).Trim+"/"+Split ( str_totalforSoftware,"-")(1).Trim+"/"+Split ( str_totalforSoftware,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_187">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_capitalGoods]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"EMERSON\sELECTRIC\sCO\s1.8%\s2027-10-15\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_188">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_capitalGoods]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_capitalGoods,"-")(0).Trim+"/"+Split ( str_capitalGoods,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_189">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforTransportation]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sTransportation\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_190">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforTransportation]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalforTransportation,"-")(0).Trim+"/"+Split ( str_totalforTransportation,"-")(3).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_191">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"TOTAL\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_192">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalCost,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_totalforCurrencies+ Environment.NewLine+ str_CARLSBERG+ Environment.NewLine+ str_totalforSoftware+ Environment.NewLine+ str_capitalGoods+ Environment.NewLine+ str_totalforTransportation+ Environment.NewLine+ str_totalCost]" />
    </Sequence>
    <Sequence DisplayName="Holdings by Asset Class and Sector - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_78">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalOther" />
        <Variable x:TypeArguments="x:String" Name="str_CARLSBERG" />
        <Variable x:TypeArguments="x:String" Name="str_totalRealEstate" />
        <Variable x:TypeArguments="x:String" Name="str_totalFinancials" />
        <Variable x:TypeArguments="x:String" Name="str_mortgageBacked" />
        <Variable x:TypeArguments="x:String" Name="str_mortgageBackedQuantity" />
        <Variable x:TypeArguments="x:String" Name="str_mortgageBackedPriceUnit" />
        <Variable x:TypeArguments="x:String" Name="str_totalFixedIncome" />
        <Variable x:TypeArguments="x:String" Name="str_estimatedAnnualIncome" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_193">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_194">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_195">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_196">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalOther]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sOther\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_197">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalOther]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalOther,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_198">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_CARLSBERG]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"CARLSBERG\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_199">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_CARLSBERG]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_CARLSBERG,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_200">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalRealEstate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sReal\sEstate\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_201">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalRealEstate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalRealEstate,"-")(3).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_202">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFinancials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sFinancials\s+(.*)\s*Reporting").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_203">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFinancials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalFinancials,"-")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_204">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_mortgageBacked]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"GNMAII\sJUMBO\sTBA\s30\sYEAR\s2%\s2051-10-15\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_205">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_mortgageBacked]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_mortgageBacked,"-")(1).Trim+"/"+Split (  str_mortgageBacked,"-")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_206">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFixedIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sFixed\sIncome\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_207">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFixedIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalFixedIncome,"-")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_208">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_estimatedAnnualIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"TOTAL\s(\d.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_209">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_estimatedAnnualIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_estimatedAnnualIncome,"-")(5).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_totalOther+ Environment.NewLine+ str_CARLSBERG+ Environment.NewLine+ str_totalRealEstate+ Environment.NewLine+ str_totalFinancials+ Environment.NewLine+  str_mortgageBacked+ Environment.NewLine+ str_totalFixedIncome+ Environment.NewLine+ str_estimatedAnnualIncome]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Index Results - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_80">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_SPIndex" />
        <Variable x:TypeArguments="x:String" Name="str_msciIndex" />
        <Variable x:TypeArguments="x:String" Name="str_SPIndexYTD" />
        <Variable x:TypeArguments="x:String" Name="str_SPIndexQTD" />
        <Variable x:TypeArguments="x:String" Name="str_shortMunicipalIndex" />
        <Variable x:TypeArguments="x:String" Name="str_shortMunicipalIndex5Year" />
        <Variable x:TypeArguments="x:String" Name="str_shortMunicipalIndex10Year" />
        <Variable x:TypeArguments="x:String" Name="str_blend3Year" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_210">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_211">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_212">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_213">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_SPIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"S&amp;P\s500\sIndex\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_214">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_SPIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_SPIndex,"-")(2).Trim+"/"+Split ( str_SPIndex,"-")(3).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_215">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_msciIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"MSCI\sEAFE\s\WNet\W\sIndex\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_216">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_msciIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_msciIndex,"/")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_217">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_shortMunicipalIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Bloomberg\s1-5\sYr\sShort\sMunicipal\sIndex\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_218">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_shortMunicipalIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_shortMunicipalIndex,"-")(7).Trim+"/"+Split ( str_shortMunicipalIndex,"-")(8).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_219">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_blend3Year]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Global\s55\W5\W40\sBlend\s(.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_220">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_blend3Year]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_blend3Year,"-")(5).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_SPIndex+ Environment.NewLine+ str_msciIndex+ Environment.NewLine+ str_shortMunicipalIndex+ Environment.NewLine+  str_blend3Year]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Investment Results Long - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_82">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_lifeTime" />
        <Variable x:TypeArguments="x:String" Name="str_startDate" />
        <Variable x:TypeArguments="x:String" Name="str_creditIndex" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_221">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_222">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_223">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_224">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_lifeTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sAccount\s1\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_225">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_lifeTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_lifeTime,"/")(6).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_226">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_startDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Separately\sManaged\sGlobal\sEquity\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_227">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_startDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_startDate,"/")(7).Trim+" "+Split ( str_startDate,"/")(8).Trim+" "+Split ( str_startDate,"/")(9).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_228">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_creditIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Bloomberg\sIntermediate\sA\W\sUS\sGov\WCredit\sIndex\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_229">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_creditIndex]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_creditIndex,"/")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_lifeTime+ Environment.NewLine+ str_startDate+ Environment.NewLine+ str_creditIndex]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Investment Results Short - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_84">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountYTD" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountQTD" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccount1Year" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountLifeTime" />
        <Variable x:TypeArguments="x:String" Name="str_managed" />
        <Variable x:TypeArguments="x:String" Name="str_managed10Year" />
        <Variable x:TypeArguments="x:String" Name="str_managedLifeTime" />
        <Variable x:TypeArguments="x:String" Name="str_managedStartDate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_230">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_231">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_232">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_233">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sAccount\s1\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_234">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccount,"/")(0).Trim+"/"+Split ( str_totalAccount,"/")(1).Trim+"/"+Split ( str_totalAccount,"/")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_235">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountLifeTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sAccount\s\W\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_236">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountLifeTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccountLifeTime,"/")(6).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_237">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_managed]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Fixed\sIncome\s\W\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_238">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_managed]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_managed,"/")(5).Trim+"/"+Split ( str_managed,"/")(6).Trim+"/"+Split ( str_managed,"/")(7).Trim+" "+Split ( str_managed,"/")(8).Trim+" "+Split ( str_managed,"/")(9).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_totalAccount+ Environment.NewLine+ str_totalAccountLifeTime+ Environment.NewLine+ str_managed]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Investment Results Annual - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_86">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_MSCI" />
        <Variable x:TypeArguments="x:String" Name="str_managed" />
        <Variable x:TypeArguments="x:String" Name="str_managedLifeTime" />
        <Variable x:TypeArguments="x:String" Name="str_managedStartDate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_239">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_240">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_241">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_242">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sAccount\s1\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_243">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccount,"/")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_244">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MSCI]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"MSCI\sWorld\s\WNet\W\sIndex\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_245">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MSCI]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_MSCI,"/")(2).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_246">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_managed]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Separately\sManaged\sCore\sBond\sTaxable\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_247">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_managed]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_managed,"/")(8).Trim+"/"+Split ( str_managed,"/")(9).Trim+" "+Split ( str_managed,"/")(10).Trim+" "+Split ( str_managed,"/")(11).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+  str_asofDate+ Environment.NewLine+ str_totalAccount+ Environment.NewLine+ str_MSCI+ Environment.NewLine+ str_managed]" />
    </Sequence>
    <Sequence DisplayName="Investment Results Monthly - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_93">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateSecond" />
        <Variable x:TypeArguments="x:String" Name="str_managed" />
        <Variable x:TypeArguments="x:String" Name="str_lifeTime" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_startDate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_248">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_249">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_250">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateSecond,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_251">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Start\sDate\W\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_252">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateOne,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_253">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_managed]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sAccount\s\W\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_254">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_managed]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_managed,"/")(7).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_255">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_lifeTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Separately\sManaged\sCore\sBond\sTaxable\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_256">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_lifeTime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_lifeTime,"/")(8).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_257">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_startDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Emerging\sMarkets\sGrowth\sFund\sInc\sCl\sM\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_258">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_startDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_startDate,"/")(9).Trim+" "+Split (  str_startDate,"/")(10).Trim+" "+Split (  str_startDate,"/")(11).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_259">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\s*Account\s*\W\s+\W(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_260">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccount,"/")(9).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDateOne+ Environment.NewLine+ str_asofDateSecond+ Environment.NewLine+ str_managed+ Environment.NewLine+ str_lifeTime+ Environment.NewLine+ str_startDate+ Environment.NewLine+ str_lifeTime]" />
    </Sequence>
    <Sequence DisplayName="Purchases and Sales - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_94">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateSecond" />
        <Variable x:TypeArguments="x:String" Name="str_purchasesTotalCost" />
        <Variable x:TypeArguments="x:String" Name="str_purchases" />
        <Variable x:TypeArguments="x:String" Name="str_purchasesIdentifier" />
        <Variable x:TypeArguments="x:String" Name="str_purchasesCost" />
        <Variable x:TypeArguments="x:String" Name="str_salesGain" />
        <Variable x:TypeArguments="x:String" Name="str_sales" />
        <Variable x:TypeArguments="x:String" Name="str_salesPrice" />
        <Variable x:TypeArguments="x:String" Name="str_salesProceeds" />
        <Variable x:TypeArguments="x:String" Name="str_totalforSales" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_261">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_262">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"To\W\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_263">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateSecond,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_264">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"From\W\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_265">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateOne,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_266">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_purchasesTotalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"09\W15\W2022\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_267">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_purchasesTotalCost]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_purchasesTotalCost,"/")(6).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_268">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_purchases]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"12\W20\W2022\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_269">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_purchases]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_purchases,"/")(5).Trim+"/"+Split (  str_purchases,"/")(6).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_270">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_salesGain]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"01\W13\W2023\s\d*\W\d*\sJARDINE\sMATHESON\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_271">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_salesGain]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_salesGain,"/")(8).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_272">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_sales]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"08\W15\W2023\s\d*\W?\d*\W?\d*\sPHILIP\sMORRIS\sINTL\sINC\s1.5%\s2025-05-01\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_273">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_sales]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_sales,"/")(3).Trim+"/"+Split ( str_sales,"/")(4).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_274">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforSales]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sSales\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_275">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforSales]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalforSales,"/")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDateOne+ Environment.NewLine+ str_asofDateSecond+ Environment.NewLine+ str_purchasesTotalCost+ Environment.NewLine+ str_purchases+ Environment.NewLine+ str_salesGain+ Environment.NewLine+ str_sales+ Environment.NewLine+  str_totalforSales]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="PWA/RS Relationships - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_97">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_alexander" />
        <Variable x:TypeArguments="x:String" Name="str_alexanderInceptionDate" />
        <Variable x:TypeArguments="x:String" Name="str_alexanderPWA" />
        <Variable x:TypeArguments="x:String" Name="str_marketValue" />
        <Variable x:TypeArguments="x:String" Name="str_invesmentObjective" />
        <Variable x:TypeArguments="x:String" Name="str_kennedyFamily" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_276">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_277">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_278">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_alexander]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"ALEXANDER\sCHAN\sROTH\sIRA\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_279">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_alexander]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_alexander,"/")(1).Trim+" "+Split ( str_alexander,"/")(2).Trim+" "+Split ( str_alexander,"/")(3).Trim+"/"+Split ( str_alexander,"/")(6).Trim+Split ( str_alexander,"/")(7).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_280">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_marketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"KENNEDY\sFAMILY\sTRUST\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_281">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_marketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_marketValue,"/")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_282">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_invesmentObjective]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"REICHARD\sJTWROS\s(.*\n.*\n.*)").Groups(1).Value.Replace(" ","-")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_283">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_invesmentObjective]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_invesmentObjective,"-")(11).Trim+" "+Split ( str_invesmentObjective,"-")(12).Trim+" "+Split ( str_invesmentObjective,"-")(13).Trim+" "+Split ( str_invesmentObjective,"-")(14).Trim+" "+Split ( str_invesmentObjective,"-")(15).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_284">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_kennedyFamily]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sValerie\s&amp;\sTim\sKennedy\sFamily\s(.*)").Groups(1).Value.Replace(" ","\")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_285">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_kennedyFamily]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_kennedyFamily,"/")(0).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_asofDate+ Environment.NewLine+ str_alexander+ Environment.NewLine+ str_marketValue+ Environment.NewLine+ str_invesmentObjective+ Environment.NewLine+ str_kennedyFamily]" />
    </Sequence>
    <Sequence DisplayName="Realized Gain/Loss - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_99">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateOne" />
        <Variable x:TypeArguments="x:String" Name="str_asofDateSecond" />
        <Variable x:TypeArguments="x:String" Name="str_marketValue" />
        <Variable x:TypeArguments="x:String" Name="str_marketValueGain" />
        <Variable x:TypeArguments="x:String" Name="str_marketValueLoss" />
        <Variable x:TypeArguments="x:String" Name="str_totalGain" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_286">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_287">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"To\W\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_288">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateSecond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateSecond,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_289">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"From\W\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_290">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDateOne]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDateOne,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_291">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_marketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"\d.*GRACE\sINSTITUTE\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_292">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_marketValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_marketValue,"/")(3).Trim+"/"+Split ( str_marketValue,"/")(8).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_293">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalGain]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_294">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalGain]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalGain,"/")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDateOne+ Environment.NewLine+ str_asofDateSecond+ Environment.NewLine+ str_marketValue+ Environment.NewLine+ str_totalGain]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Tax Lot Holdings - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_101">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_analog" />
        <Variable x:TypeArguments="x:String" Name="str_analogDate" />
        <Variable x:TypeArguments="x:String" Name="str_analogIdentifier" />
        <Variable x:TypeArguments="x:String" Name="str_analogQuantity" />
        <Variable x:TypeArguments="x:String" Name="str_hilton" />
        <Variable x:TypeArguments="x:String" Name="str_hiltonCost" />
        <Variable x:TypeArguments="x:String" Name="str_hiltonMarketValue" />
        <Variable x:TypeArguments="x:String" Name="str_software" />
        <Variable x:TypeArguments="x:String" Name="str_softwareUnrealized" />
        <Variable x:TypeArguments="x:String" Name="str_softwarePrice" />
        <Variable x:TypeArguments="x:String" Name="str_totalUnrealized" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_295">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_296">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_297">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_298">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_analog]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"ANALOG\sDEVICES\sINC\sCOM.*\n(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_299">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_analog]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_analog,"/")(1).Trim+"/"+Split ( str_analog,"/")(2).Trim+"/"+Split ( str_analog,"/")(3).Trim+"/"+Split ( str_analog,"/")(4).Trim+"/"+Split ( str_analog,"/")(5).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_300">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_hilton]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sHILTON\sWORLDWIDE\sHLDGS\sINC\sCOM\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_301">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_hilton]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_hilton,"/")(0).Trim+"/"+Split ( str_hilton,"/")(1).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_302">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_software]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Total\sfor\sTAIWAN\sSEMICONDUCTOR\sMFG\sLTD\sSPONSORED\sADS\s\d.*\n.*\n.*\s\d.*\n.*\n(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_303">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_software]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_software,"/")(8).Trim+"/"+Split ( str_software,"/")(12).Trim]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_304">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalUnrealized]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Unrealized\sGain\WLoss\nTotal\s(\d.*)\nTotal").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_analog+ Environment.NewLine+ str_hilton+ Environment.NewLine+ str_software+ Environment.NewLine+str_totalUnrealized]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Twenty Largest Equity Holdings - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_103">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_security" />
        <Variable x:TypeArguments="x:String" Name="str_largestHolidays" />
        <Variable x:TypeArguments="x:String" Name="str_aiaGroups" />
        <Variable x:TypeArguments="x:String" Name="str_twentyLargestHolidays" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_305">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_306">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_307">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_308">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_security]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"SAFRAN\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_310">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_largestHolidays]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Ten\sLargest\sHoldings\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_311">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_aiaGroups]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"AIA\sGROUP\sLTD\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_312">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_twentyLargestHolidays]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Twenty\sLargest\sHoldings\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_security+ Environment.NewLine+ str_largestHolidays+ Environment.NewLine+ str_aiaGroups+ Environment.NewLine+ str_twentyLargestHolidays]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
    </Sequence>
    <Sequence DisplayName="Twenty Largest Equity Holdings Comparison - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_105">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_accountNumber" />
        <Variable x:TypeArguments="x:String" Name="str_asofDate" />
        <Variable x:TypeArguments="x:String" Name="str_astrazeneca" />
        <Variable x:TypeArguments="x:String" Name="str_abbott" />
        <Variable x:TypeArguments="x:String" Name="str_twentyLargestHolidays" />
        <Variable x:TypeArguments="x:String" Name="str_alphabet" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_313">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountNumber]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Account\W\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_314">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"As\sof\s((Sep(tember)?|Dec(ember)?|Mar(ch)?|Jun(e)?|Jul(l)?|Aug(ust)?)\s\d{1,2}\W\s\d{2,4})").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_315">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_asofDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[datetime.ParseExact (  str_asofDate,("MMM dd, yyyy"), system.Globalization.CultureInfo.InvariantCulture).ToString("MM-dd-yyyy")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_316">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_astrazeneca]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"ASTRAZENECA\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_317">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_astrazeneca]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_astrazeneca,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_318">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_abbott]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"ABBOTT\sLABS\sCOM\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_319">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_abbott]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_abbott,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_320">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_twentyLargestHolidays]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"Twenty\sLargest\sHoldings\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_321">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_twentyLargestHolidays]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_twentyLargestHolidays,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_322">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_alphabet]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match (str_pdfText,"ALPHABET\sC\s(.*)").Groups(1).Value]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[str_accountNumber+ Environment.NewLine+ str_asofDate+ Environment.NewLine+ str_astrazeneca+ Environment.NewLine+ str_abbott+ Environment.NewLine+ str_twentyLargestHolidays+ Environment.NewLine+ str_alphabet]" />
    </Sequence>
    <ui:RemoveDuplicateRows DataTable="[dt_CG]" DisplayName="Remove Duplicate Rows" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[dt_CG]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RemoveDuplicateRows>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_CG]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Documents\PDF_Extraction\CG_Report_Mapping.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteRange>
  </Sequence>
</Activity>