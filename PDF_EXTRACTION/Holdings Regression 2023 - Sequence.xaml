<Activity mc:Ignorable="sap sap2010" x:Class="Holdings_Regression_2023___Sequence" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="502,1103.3333333333333" sap2010:WorkflowViewState.IdRef="Holdings_Regression_2023___Sequence_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main - Sequence" sap:VirtualizedContainerService.HintSize="512,1038.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_outputReport" />
      <Variable x:TypeArguments="x:String" Name="str_pdfText" />
      <Variable x:TypeArguments="x:String" Name="str_todayDate" />
      <Variable x:TypeArguments="x:String" Name="str_dt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_outputReport]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="450,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Downloads\CapitalGroup_Advisor_Report_Mapping_25012024.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_131">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_todayDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[datetime.now.ToString("ddMMyyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[not Directory.Exists(&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_todayDate)]" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="300,141.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="258,54" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_todayDate]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CreateDirectory>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13" />
      </If.Else>
    </If>
    <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\20240205\Holdings_Regression_2023_20240205010655_20240205060915\GRACE INSTITUTE.PDF" sap:VirtualizedContainerService.HintSize="450,84" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[str_pdfText]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadPDFText>
    <Sequence DisplayName="Holdings_Regression_2023___Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_total" />
        <Variable x:TypeArguments="x:String" Name="str_totalEquity" />
        <Variable x:TypeArguments="x:String" Name="str_equlityMV" />
        <Variable x:TypeArguments="x:String" Name="str_totalEnergySecurity" />
        <Variable x:TypeArguments="x:String" Name="str_totalHealthCare" />
        <Variable x:TypeArguments="x:String" Name="str_totalFinances" />
        <Variable x:TypeArguments="x:String" Name="str_industrials" />
        <Variable x:TypeArguments="x:String" Name="str_totalConsumerStaples" />
        <Variable x:TypeArguments="x:String" Name="str_totalInformationTechnology" />
        <Variable x:TypeArguments="x:String" Name="str_totalUtilites" />
        <Variable x:TypeArguments="x:String" Name="str_spain" />
        <Variable x:TypeArguments="x:String" Name="str_totalNorthAmerica" />
        <Variable x:TypeArguments="x:String" Name="str_unitedStates" />
        <Variable x:TypeArguments="x:String" Name="str_mexico" />
        <Variable x:TypeArguments="x:String" Name="str_USDollarCurrency" />
        <Variable x:TypeArguments="x:String" Name="str_estimatedAnnualIncome" />
        <Variable x:TypeArguments="x:String" Name="str_MASTERCARD" />
        <Variable x:TypeArguments="x:String" Name="str_WOLFSPEED" />
        <Variable x:TypeArguments="x:String" Name="str_UKEENERGY" />
        <Variable x:TypeArguments="x:String" Name="str_PHILLIPS" />
        <Variable x:TypeArguments="x:String" Name="str_fixedIncome" />
        <Variable x:TypeArguments="x:String" Name="str_EuropeanUnion" />
        <Variable x:TypeArguments="x:String" Name="str_totalCash" />
        <Variable x:TypeArguments="x:String" Name="str_totalJapan" />
        <Variable x:TypeArguments="x:String" Name="str_GENERALELECTRIC" />
        <Variable x:TypeArguments="x:String" Name="str_totalLuxembourg" />
        <Variable x:TypeArguments="x:String" Name="str_totalforCurrencies" />
        <Variable x:TypeArguments="x:String" Name="str_areospace" />
        <Variable x:TypeArguments="x:String" Name="str_MICROSOFT" />
        <Variable x:TypeArguments="x:String" Name="str_equityTotalforSoftware" />
        <Variable x:TypeArguments="x:String" Name="str_totalforMaterials" />
        <Variable x:TypeArguments="x:String" Name="str_consumerDiscretionary" />
        <Variable x:TypeArguments="x:String" Name="str_totalFinancials" />
        <Variable x:TypeArguments="x:String" Name="str_fixedIncomeFinancials" />
        <Variable x:TypeArguments="x:String" Name="str_tenLargestHoldings" />
        <Variable x:TypeArguments="x:String" Name="str_sAPSE" />
        <Variable x:TypeArguments="x:String" Name="str_nESTLESA" />
        <Variable x:TypeArguments="x:String" Name="str_twentyLargestHoldings" />
        <Variable x:TypeArguments="x:String" Name="str_tESLAMSCI" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_total]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEquity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_total,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(0)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalEquity]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equlityMV]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_total,"/")(3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(1)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_equlityMV]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEnergySecurity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sEnergy\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_7">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEnergySecurity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalEnergySecurity,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_8">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(2)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[str_totalEnergySecurity]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_9">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalHealthCare]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sHealth\sCare\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalHealthCare]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalHealthCare,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(3)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalHealthCare]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFinances]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sFinancials\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFinances]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalFinances,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(4)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalFinances]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_16">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEnergySecurity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"TOTAL\sSE\s\d.*[\r\n]+Total\sEnergy\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalEnergySecurity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalEnergySecurity,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_18">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(6)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalEnergySecurity]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_19">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_industrials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"DELTA\sAIR\sLINES\sINC\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_20">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_industrials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_industrials,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_21">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(7)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_industrials]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalConsumerStaples]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"UNILEVER\sPLC\s\d.*[\r\n]+Total\sConsumer\sStaples\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalConsumerStaples]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalConsumerStaples,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(8)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalConsumerStaples]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_25">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalInformationTechnology]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"WOLFSPEED\sINC\s\d.*[\r\n]+Total\sInformation\sTechnology\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_26">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalInformationTechnology]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalInformationTechnology,"/")(3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_27">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(9)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalInformationTechnology]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_28">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalUtilites]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"SEMPRA\sENERGY\sCOM\s\d.*[\r\n]+Total\sUtilities\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_29">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalUtilites]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalUtilites,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_30">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(10)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalUtilites]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_31">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_spain]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Spain\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_32">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_spain]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_spain,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_33">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(11)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_spain]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalNorthAmerica]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sNorth\sAmerica\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_35">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalNorthAmerica]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalNorthAmerica,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_36">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(12)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalNorthAmerica]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_37">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_unitedStates]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"United\sStates\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_38">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_unitedStates]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_unitedStates,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_39">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(13)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_unitedStates]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_40">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_mexico]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Mexico\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_41">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_mexico]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_mexico,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_42">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(14)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_mexico]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_43">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_USDollarCurrency]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"US\sDOLLAR\s-\sINCOME\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_44">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_USDollarCurrency]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_USDollarCurrency,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_45">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(16)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_USDollarCurrency]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_46">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_estimatedAnnualIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"BEIGENE\sLTD\sSPONSORED\sADR\s.*[\r\n]+BP\sUSD\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_47">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_estimatedAnnualIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_estimatedAnnualIncome,"/")(9)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_48">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(18)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_estimatedAnnualIncome]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_49">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MASTERCARD]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"MARSH\s&amp;\sMCLENNAN\sCOS\sINC\sCOM\sMMC\s.*[\r\n]+MASTERCARD\sINC\sCL\sA\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_50">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MASTERCARD]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_MASTERCARD,"/")(0)+"/"+Split ( str_MASTERCARD,"/")(1)+"/"+Split ( str_MASTERCARD,"/")(4)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_51">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(19)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_MASTERCARD]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_52">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_WOLFSPEED]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"TEXAS\sINSTRS\sINC\sCOM\sTXN\s.*[\r\n]+WOLFSPEED\sINC\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_53">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_WOLFSPEED]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_WOLFSPEED,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_54">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(20)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_WOLFSPEED]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_55">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_UKEENERGY]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"DUKE\sENERGY\sPROGRESS\sINC\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_56">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_UKEENERGY]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_UKEENERGY,"/")(2)+"/"+Split ( str_UKEENERGY,"/")(3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_57">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(21)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_UKEENERGY]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_58">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_PHILLIPS]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"PHILLIPS\s66\s3\W85%\s2025-04-09\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_59">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_PHILLIPS]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_PHILLIPS,"/")(5)+"/"+Split ( str_PHILLIPS,"/")(6)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_60">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(22)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_PHILLIPS]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_61">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sfor\sFixed\sIncome\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_62">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedIncome]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_fixedIncome,"/")(3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_63">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(23)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_fixedIncome]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_64">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_EuropeanUnion]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sEuropean\sUnion\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_65">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_EuropeanUnion]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_EuropeanUnion,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_66">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(24)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_EuropeanUnion]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_67">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCash]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total Cash and Cash Equivalents\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_68">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalCash]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalCash,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_69">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(25)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalCash]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_70">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalJapan]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"UNICHARM\sCORP\s.*[\n\r]+Total\sJapan\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_71">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalJapan]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalJapan,"/")(3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_72">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(26)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalJapan]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_73">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_GENERALELECTRIC]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"GALLAGHER\sARTHUR\sJ\s&amp;\sCO\sCOM\s.*[\r\n]+GENERAL\sELECTRIC\sCO\sNEW\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_74">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_GENERALELECTRIC]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_GENERALELECTRIC,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_75">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(27)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_GENERALELECTRIC]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_76">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalLuxembourg]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"MEDTRONIC\sGLOBAL\sHOLDINGS\sSC\sA\s.*[\n\r]+Total\sLuxembourg\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_77">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalLuxembourg]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalLuxembourg,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_78">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(28)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalLuxembourg]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_79">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforCurrencies]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sfor\sCurrencies\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_80">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforCurrencies]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalforCurrencies,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_81">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(30)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalforCurrencies]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_82">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_areospace]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"NORTHROP\sGRUMMAN\sCORP\sCOM\s.*[\r\n]+RTX\sCORP\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_83">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_areospace]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_areospace,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_84">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(31)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_areospace]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_85">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MICROSOFT]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"DASSAULT\sSYSTEMES\sEUR\s\WPOST\sSUBDIVISION\W\s.*[\r\n]+MICROSOFT CORP COM\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_86">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MICROSOFT]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_MICROSOFT,"/")(8)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_87">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(32)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_MICROSOFT]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_88">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equityTotalforSoftware]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sfor\sSoftware\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_89">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equityTotalforSoftware]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_equityTotalforSoftware,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_90">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(33)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_equityTotalforSoftware]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_91">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforMaterials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sfor\sMaterials\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_92">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalforMaterials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalforMaterials,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_93">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(34)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalforMaterials]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_94">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_consumerDiscretionary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"ROYAL\sCARIBBEAN\sCRUISES\sLTD\sCOM\s.*[\r\n]+TRACTOR\sSUPPLY\sCO\sTSCO(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_95">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_consumerDiscretionary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_consumerDiscretionary,"/")(2)+"/"+Split ( str_consumerDiscretionary,"/")(5)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_96">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(36)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_consumerDiscretionary]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_97">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFinancials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"WORLDLINE\sEUR0\W68\sBNFWR44\s.*[\r\n]+Total\sFinancials\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_98">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalFinancials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalFinancials,"/")(0)+"/"+Split (str_totalFinancials,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_99">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(37)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalFinancials]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_100">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedIncomeFinancials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"WELLS\sFARGO\s&amp;\sCO\s.*[\r\n]+Total\sFinancials\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_101">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedIncomeFinancials]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_fixedIncomeFinancials,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_102">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(38)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_fixedIncomeFinancials]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_103">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_tenLargestHoldings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Ten\sLargest\sHoldings\s(\d.*)").Groups(1). Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_104">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(40)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_tenLargestHoldings]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_105">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_sAPSE]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"SAP\sSE\s(\d.*)[\r\n]+Ten\sLargest\sHoldings").Groups(1). Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_106">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(41)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_sAPSE]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_107">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_nESTLESA]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"UNITEDHEALTH\sGROUP\s.*[\r\n]+NESTLE\sSA\s(\d.*)").Groups(1). Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_108">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_nESTLESA]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_nESTLESA,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_109">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(42)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_nESTLESA]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_110">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_twentyLargestHoldings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"NESTLE\s.*[\r\n]+Twenty\sLargest\sHoldings\s(\d.*)").Groups(1). Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_111">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_twentyLargestHoldings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_twentyLargestHoldings,"/")(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_112">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(43)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_twentyLargestHoldings]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_113">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_tESLAMSCI]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"TESLA\s(\d.*)").Groups(1). Value]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_114">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_outputReport. Rows(44)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_tESLAMSCI]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_outputReport]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1050" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_expectedValue" />
              <Variable x:TypeArguments="x:String" Name="str_actualValue" />
              <Variable x:TypeArguments="x:Double" Name="int_value" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_115">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentRow(6).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[str_expectedValue.Contains(&quot;(&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_126">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_expectedValue.Replace("(","-").replace(")","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6" />
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_116">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[str_expectedValue.Replace("(","").Replace(")","").Replace(",","").Replace(" ","").Replace("$","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_117">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace( str_expectedValue,"\.0+\b|(?&lt;=\.\d*?)0+\b","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_118">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace( str_expectedValue,"[\r\n]+","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_119">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentRow(7).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[str_actualValue.Contains(&quot;(&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,266.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_123">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("(","-").replace(")","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8" />
              </If.Else>
            </If>
            <If Condition="[str_actualValue.Contains(&quot;%&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,733.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="int_value2" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_120">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("%","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_121">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[int_value]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[Convert.ToDouble (str_actualValue)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_122">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[int_value2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[int_value/100]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_125">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[int_value2.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476,423.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_127">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("(","").Replace(")","").Replace(",","").Replace(" ","").Replace("$","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_128">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(  str_actualValue,"\.0+\b|(?&lt;=\.\d*?)0+\b","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_129">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(  str_actualValue,"[\r\n]+","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[str_expectedValue.Trim.TrimStart.TrimEnd.Equals(str_actualValue.trim.TrimStart. TrimEnd)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_124">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CurrentRow(8)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Pass"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[str_expectedValue.Trim.TrimStart.TrimEnd +&quot;=&quot;+str_actualValue.trim.TrimStart. TrimEnd+&quot; -&quot;+&quot;Pass&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[str_expectedValue.Trim.TrimStart.TrimEnd +&quot;=&quot;+str_actualValue.trim.TrimStart. TrimEnd+&quot;-&quot;+&quot;Fail&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_130">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CurrentRow(8)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Fail"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_outputReport]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="450,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Downloads\CapitalGroup_Advisor_Report_Mapping_25012024.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteRange>
    <ui:OutputDataTable DataTable="[dt_outputReport]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[str_dt]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:OutputDataTable>
  </Sequence>
</Activity>