<Activity mc:Ignorable="sap sap2010" x:Class="Results_Regression_2023___Sequence" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1153.3333333333333,1103.3333333333333" sap2010:WorkflowViewState.IdRef="Results_Regression_2023___Sequence_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main - Sequence" sap:VirtualizedContainerService.HintSize="512,1038.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_resuitRegression" />
      <Variable x:TypeArguments="x:String" Name="str_pdfText" />
      <Variable x:TypeArguments="x:String" Name="str_todayDate" />
      <Variable x:TypeArguments="x:String" Name="str_dt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dt_resuitRegression]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="450,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Downloads\CapitalGroup_Advisor_Report_Mapping_25012024.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadRange>
    <Assign sap:VirtualizedContainerService.HintSize="450,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_235">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[str_todayDate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[datetime.now.ToString("ddMMyyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[not Directory.Exists(&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_todayDate)]" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="If_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="300,141.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_29">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="258,54" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[&quot;C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\&quot;+ str_todayDate]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CreateDirectory>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30" />
      </If.Else>
    </If>
    <ui:ReadPDFText PreserveFormatting="{x:Null}" DisplayName="Read PDF Text" FileName="C:\Users\Prasanth187\OneDrive - Empaxis Data Management\TempPath\Birt\20240205\Results_Regression_2023_20240205010750_20240205060920\GRACE INSTITUTE.PDF" sap:VirtualizedContainerService.HintSize="450,84" sap2010:WorkflowViewState.IdRef="ReadPDFText_2" Range="All" Text="[str_pdfText]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadPDFText>
    <Sequence DisplayName="Results Regression 2023 - Sequence" sap:VirtualizedContainerService.HintSize="450,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_24">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="str_beginningValue" />
        <Variable x:TypeArguments="x:String" Name="str_cashandAssets" />
        <Variable x:TypeArguments="x:String" Name="str_accountInception" />
        <Variable x:TypeArguments="x:String" Name="str_QTD" />
        <Variable x:TypeArguments="x:String" Name="str_equity" />
        <Variable x:TypeArguments="x:String" Name="str_3year" />
        <Variable x:TypeArguments="x:String" Name="str_beginningValue1" />
        <Variable x:TypeArguments="x:String" Name="str_administrative" />
        <Variable x:TypeArguments="x:String" Name="str_resultsStartDate" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountManaged" />
        <Variable x:TypeArguments="x:String" Name="str_MSCIWorld" />
        <Variable x:TypeArguments="x:String" Name="str_separateManaged" />
        <Variable x:TypeArguments="x:String" Name="str_sandP" />
        <Variable x:TypeArguments="x:String" Name="str_MSCI" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountYTD" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountManaged3Years" />
        <Variable x:TypeArguments="x:String" Name="str_equityManagedLifetime" />
        <Variable x:TypeArguments="x:String" Name="str_netofFees" />
        <Variable x:TypeArguments="x:String" Name="str_separatelyManagedGlobalEquity" />
        <Variable x:TypeArguments="x:String" Name="str_World" />
        <Variable x:TypeArguments="x:String" Name="str_totalTotalAccount" />
        <Variable x:TypeArguments="x:String" Name="str_Aug2023" />
        <Variable x:TypeArguments="x:String" Name="str_emergingMarkets" />
        <Variable x:TypeArguments="x:String" Name="str_separatelyManagedCoreBond" />
        <Variable x:TypeArguments="x:String" Name="str_bloombergIntermediate" />
        <Variable x:TypeArguments="x:String" Name="str_accountInception1" />
        <Variable x:TypeArguments="x:String" Name="str_accountInception2" />
        <Variable x:TypeArguments="x:String" Name="str_accountInception3" />
        <Variable x:TypeArguments="x:String" Name="str_totalAccountLifetime" />
        <Variable x:TypeArguments="x:String" Name="str_equitySeparately" />
        <Variable x:TypeArguments="x:String" Name="str_fixedBloombergIntermediate" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_146">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_beginningValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Beginning\svalue\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_147">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_beginningValue]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split (str_beginningValue,"/")(0)+"/"+Split (str_beginningValue,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_148">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(45)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_beginningValue]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_149">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_cashandAssets]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Cash\sand\sasset\sdistributions\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_150">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_cashandAssets]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_cashandAssets,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_151">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(46)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_cashandAssets]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_152">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountInception]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Account\sInception\sDate:\s(.*)").Groups(1).Value.Replace(" ","/"). Replace(",","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_218">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_accountInception]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_accountInception,"/")(1)+"-"+Split (  str_accountInception,"/")(0)+"-"+Split (  str_accountInception,"/")(2).Substring((Split(str_accountInception,"/")(2).Length-3),3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_153">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(47)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_accountInception]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_154">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Equity\s-\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_155">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_QTD]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_equity,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_156">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(48)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_QTD]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_157">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_3year]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_equity,"/")(4)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_158">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(49)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_3year]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_159">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_beginningValue1]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"Beginning\svalue\s(.*)")(1).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_216">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_beginningValue1]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_beginningValue1,"/")(3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_161">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(50)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_beginningValue1]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_162">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_administrative]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Administrative\sand\sother\sexpenses\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_163">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_administrative]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_administrative,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_164">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(51)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_administrative]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_165">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_resultsStartDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Results\sStart\sDate:\s(.*)").Groups(1).Value.Replace(" ","/").Replace(",","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_223">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_resultsStartDate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split ( str_resultsStartDate,"/")(1)+"-"+Split (   str_resultsStartDate,"/")(0)+"-"+Split ( str_resultsStartDate,"/")(2).Substring((Split( str_resultsStartDate,"/")(2).Length-3),3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_167">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(52)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_resultsStartDate]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_168">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountManaged]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sAccount\s-\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_169">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountManaged]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccountManaged,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_170">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(53)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalAccountManaged]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_171">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_World]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"MSCI\sWorld\s\WNet\W\sIndex\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_172">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_World]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_World,"/")(2)+"/"+Split ( str_World,"/")(6)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_173">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(54)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_World]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_174">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_separateManaged]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Separately\sManaged\sCore\sBond\sTaxable\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_175">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_separateManaged]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_separateManaged,"/")(1)+"/"+Split ( str_separateManaged,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_176">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(55)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_separateManaged]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_177">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_sandP]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"S&amp;P\s500\sIndex\s.(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_178">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_sandP]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_sandP,"/")(3)+"/"+Split ( str_sandP,"/")(6)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_179">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(56)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_sandP]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_180">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MSCI]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"MSCI\sEAFE\s\WNet\W\sIndex\s.(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_181">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_MSCI]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_MSCI,"/")(5)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_182">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(57)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_MSCI]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_183">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountYTD]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sAccount\s1\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_184">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountYTD]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccountYTD,"/")(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_185">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(58)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalAccountYTD]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_186">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountManaged3Years]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Total\sAccount\s-\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_187">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountManaged3Years]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_totalAccountManaged3Years,"/")(4)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_188">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(59)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalAccountManaged3Years]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_189">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equityManagedLifetime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Equity\s-\sManaged\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_190">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equityManagedLifetime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_equityManagedLifetime,"/")(7)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_191">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(60)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_equityManagedLifetime]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_224">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountLifetime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"Total\sAccount\s1\s(.*)")(1).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_225">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalAccountLifetime]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalAccountLifetime,"/")(10)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_226">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(61)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalAccountLifetime]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_227">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equitySeparately]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match( str_pdfText,"Separately\sManaged\sGlobal\sEquity\s(.*)").Groups(1).Value.Replace(" ","/").Replace(",","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_229">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_equitySeparately]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split (  str_equitySeparately,"/")(9)+"-"+Split (  str_equitySeparately,"/")(8)+"-"+Split (  str_equitySeparately,"/")(10).Substring((Split(  str_equitySeparately,"/")(10).Length-3),3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_230">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(62)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_equitySeparately]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_231">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedBloombergIntermediate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match( str_pdfText,"Bloomberg\sIntermediate\sA\W\sUS\sGov\WCredit\sIndex\s\s(.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_232">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_fixedBloombergIntermediate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_fixedBloombergIntermediate,"/")(1)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_233">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(63)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_fixedBloombergIntermediate]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_192">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_netofFees]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Investment\sResults\sYTD\s2022\s2021\s2020.*[\r\n]+Total.*[\r\n]+Total\sAccount\s.*[\r\n]+Total\sAccount\s\WNet\sof\sFees\W\s\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_193">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_netofFees]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_netofFees,"/")(0)+"/"+Split ( str_netofFees,"/")(1)+"/"+Split ( str_netofFees,"/")(8)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_194">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(64)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_netofFees]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_195">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_separatelyManagedGlobalEquity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Separately\sManaged\sGlobal\sEquity\s\s(\d.*)").Groups(1).Value.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_196">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_separatelyManagedGlobalEquity]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_separatelyManagedGlobalEquity,"/")(4)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_197">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(65)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_separatelyManagedGlobalEquity]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_198">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_World]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"MSCI\sWorld\s\WNet\W\sIndex\s\s(\d.*)")(2).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_199">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_World]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_World,"/")(9)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_200">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(66)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_World]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_201">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalTotalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"Total\sAccount\s\s\s(.*)")(1).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_202">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_totalTotalAccount]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_totalTotalAccount,"/")(9)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_203">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(67)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_totalTotalAccount]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_204">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_Aug2023]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"Total\sAccount\s-\sManaged\s\s(\d.*)")(1).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_205">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_Aug2023]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_Aug2023,"/")(5)+"/"+Split ( str_Aug2023,"/")(11)+"/"+Split ( str_Aug2023,"/")(12)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_206">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(68)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_Aug2023]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_207">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_emergingMarkets]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions. Regex.Match (str_pdfText,"Emerging\sMarkets\sGrowth\sFund\sInc\sCl\sM\s\s(.*)").Groups(1).Value.Replace(" ","/").Replace(",","")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_208">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_emergingMarkets]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Split ( str_emergingMarkets,"/")(9)+"-"+Split (  str_emergingMarkets,"/")(8)+"-"+Split (  str_emergingMarkets,"/")(10).Substring((Split(  str_emergingMarkets,"/")(10).Length-3),3)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_209">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(69)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_emergingMarkets]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_210">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_separatelyManagedCoreBond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"Separately\sManaged\sCore\sBond\sTaxable\s\s(.*)")(4).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_211">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_separatelyManagedCoreBond]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_separatelyManagedCoreBond,"/")(7)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_212">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(70)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_separatelyManagedCoreBond]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_213">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_bloombergIntermediate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Matches( str_pdfText,"Bloomberg\sIntermediate\sA\W\sUS\sGov\WCredit\sIndex\s\s(.*)")(6).ToString.Replace(" ","/")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_214">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[str_bloombergIntermediate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Split ( str_bloombergIntermediate,"/")(12)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_215">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Object">[dt_resuitRegression.Rows(71)(7)]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Object">[str_bloombergIntermediate]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_resuitRegression]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="450,54" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="476,1050" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="str_expectedValue" />
              <Variable x:TypeArguments="x:String" Name="str_actualValue" />
              <Variable x:TypeArguments="x:Double" Name="int_value" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_130">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentRow(6).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[str_expectedValue.Contains(&quot;(&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_135">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_expectedValue.Replace("(","-").replace(")","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18" />
              </If.Else>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_131">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[str_expectedValue.Replace("(","").Replace(")","").Replace(",","").Replace(" ","").Replace("$","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_132">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace( str_expectedValue,"\.0+\b|(?&lt;=\.\d*?)0+\b","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_133">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_expectedValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace( str_expectedValue,"[\r\n]+","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_134">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CurrentRow(7).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[str_actualValue.Contains(&quot;(&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,266.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_136">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("(","-").replace(")","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20" />
              </If.Else>
            </If>
            <If Condition="[str_actualValue.Contains(&quot;%&quot;)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,733.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_16">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Double" Name="int_value2" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_137">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("%","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_138">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[int_value]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[Convert.ToDouble (str_actualValue)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_139">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Double">[int_value2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Double">[int_value/100]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_140">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[int_value2.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,144.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Trace]" Message="[str_actualValue]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476,423.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_141">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[str_actualValue.Replace("(","").Replace(")","").Replace(",","").Replace(" ","").Replace("$","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_142">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(  str_actualValue,"\.0+\b|(?&lt;=\.\d*?)0+\b","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_143">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_actualValue]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[System.Text.RegularExpressions.Regex.Replace(  str_actualValue,"[\r\n]+","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <If Condition="[str_expectedValue.Trim.TrimStart.TrimEnd.Equals(str_actualValue.trim.TrimStart. TrimEnd)]" sap:VirtualizedContainerService.HintSize="434,54" sap2010:WorkflowViewState.IdRef="If_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_22">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_144">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CurrentRow(8)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Pass"]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[str_expectedValue.Trim.TrimStart.TrimEnd +&quot;=&quot;+str_actualValue.trim.TrimStart. TrimEnd+&quot; -&quot;+&quot;Pass&quot;]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="476,304.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[str_expectedValue.Trim.TrimStart.TrimEnd +&quot;=&quot;+str_actualValue.trim.TrimStart. TrimEnd+&quot;-&quot;+&quot;Fail&quot;]" />
                  <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_145">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CurrentRow(8)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">["Fail"]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:OutputDataTable DataTable="[dt_resuitRegression]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="450,82" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[str_dt]" />
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_resuitRegression]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="450,116" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Master" WorkbookPath="C:\Users\Prasanth187\Downloads\CapitalGroup_Advisor_Report_Mapping_25012024.xlsx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteRange>
  </Sequence>
</Activity>